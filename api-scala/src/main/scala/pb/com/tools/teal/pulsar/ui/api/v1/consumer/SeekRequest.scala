// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.tools.teal.pulsar.ui.api.v1.consumer

@SerialVersionUID(0L)
final case class SeekRequest(
    consumerName: _root_.scala.Predef.String = "",
    seek: com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SeekRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = consumerName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (seek.timestamp.isDefined) {
        val __value = seek.timestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (seek.messageId.isDefined) {
        val __value = seek.messageId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = consumerName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      seek.timestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      seek.messageId.foreach { __v =>
        val __m = __v
        _output__.writeBytes(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withConsumerName(__v: _root_.scala.Predef.String): SeekRequest = copy(consumerName = __v)
    def getTimestamp: com.google.protobuf.timestamp.Timestamp = seek.timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def withTimestamp(__v: com.google.protobuf.timestamp.Timestamp): SeekRequest = copy(seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Timestamp(__v))
    def getMessageId: _root_.com.google.protobuf.ByteString = seek.messageId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withMessageId(__v: _root_.com.google.protobuf.ByteString): SeekRequest = copy(seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.MessageId(__v))
    def clearSeek: SeekRequest = copy(seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Empty)
    def withSeek(__v: com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek): SeekRequest = copy(seek = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = consumerName
          if (__t != "") __t else null
        }
        case 2 => seek.timestamp.orNull
        case 3 => seek.messageId.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(consumerName)
        case 2 => seek.timestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => seek.messageId.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.type = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest
    // @@protoc_insertion_point(GeneratedMessage[tools.teal.pulsar.ui.api.v1.SeekRequest])
}

object SeekRequest extends scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest = {
    var __consumerName: _root_.scala.Predef.String = ""
    var __seek: com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __consumerName = _input__.readStringRequireUtf8()
        case 18 =>
          __seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Timestamp(__seek.timestamp.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.MessageId(_input__.readBytes())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest(
        consumerName = __consumerName,
        seek = __seek,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest(
        consumerName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        seek = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]).map(com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Timestamp(_))
            .orElse[com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.MessageId(_)))
            .getOrElse(com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsumerProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsumerProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest(
    consumerName = "",
    seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Empty
  )
  sealed trait Seek extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isTimestamp: _root_.scala.Boolean = false
    def isMessageId: _root_.scala.Boolean = false
    def timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    def messageId: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
  }
  object Seek {
    @SerialVersionUID(0L)
    case object Empty extends com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Timestamp(value: com.google.protobuf.timestamp.Timestamp) extends com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek {
      type ValueType = com.google.protobuf.timestamp.Timestamp
      override def isTimestamp: _root_.scala.Boolean = true
      override def timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class MessageId(value: _root_.com.google.protobuf.ByteString) extends com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isMessageId: _root_.scala.Boolean = true
      override def messageId: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  implicit class SeekRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest](_l) {
    def consumerName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.consumerName)((c_, f_) => c_.copy(consumerName = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTimestamp)((c_, f_) => c_.copy(seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.Timestamp(f_)))
    def messageId: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getMessageId)((c_, f_) => c_.copy(seek = com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek.MessageId(f_)))
    def seek: _root_.scalapb.lenses.Lens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek] = field(_.seek)((c_, f_) => c_.copy(seek = f_))
  }
  final val CONSUMER_NAME_FIELD_NUMBER = 1
  final val TIMESTAMP_FIELD_NUMBER = 2
  final val MESSAGE_ID_FIELD_NUMBER = 3
  def of(
    consumerName: _root_.scala.Predef.String,
    seek: com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest.Seek
  ): _root_.com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest = _root_.com.tools.teal.pulsar.ui.api.v1.consumer.SeekRequest(
    consumerName,
    seek
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tools.teal.pulsar.ui.api.v1.SeekRequest])
}
