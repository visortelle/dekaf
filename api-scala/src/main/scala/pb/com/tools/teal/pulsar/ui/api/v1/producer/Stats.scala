// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.tools.teal.pulsar.ui.api.v1.producer

@SerialVersionUID(0L)
final case class Stats(
    numMessagesSent: _root_.scala.Long = 0L,
    numBytesSent: _root_.scala.Long = 0L,
    numSendFailed: _root_.scala.Long = 0L,
    numAcksReceived: _root_.scala.Long = 0L,
    sendMessagesRate: _root_.scala.Double = 0.0,
    sendBytesRate: _root_.scala.Double = 0.0,
    totalMessagesSent: _root_.scala.Long = 0L,
    totalBytesSent: _root_.scala.Long = 0L,
    totalSendFailed: _root_.scala.Long = 0L,
    totalAcksReceived: _root_.scala.Long = 0L,
    pendingQueueSize: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Stats] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = numMessagesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = numBytesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = numSendFailed
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = numAcksReceived
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = sendMessagesRate
        if (__value != 0.0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(5, __value)
        }
      };
      
      {
        val __value = sendBytesRate
        if (__value != 0.0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(6, __value)
        }
      };
      
      {
        val __value = totalMessagesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(7, __value)
        }
      };
      
      {
        val __value = totalBytesSent
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      
      {
        val __value = totalSendFailed
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(9, __value)
        }
      };
      
      {
        val __value = totalAcksReceived
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(10, __value)
        }
      };
      
      {
        val __value = pendingQueueSize
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(11, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = numMessagesSent
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = numBytesSent
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = numSendFailed
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = numAcksReceived
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = sendMessagesRate
        if (__v != 0.0) {
          _output__.writeDouble(5, __v)
        }
      };
      {
        val __v = sendBytesRate
        if (__v != 0.0) {
          _output__.writeDouble(6, __v)
        }
      };
      {
        val __v = totalMessagesSent
        if (__v != 0L) {
          _output__.writeInt64(7, __v)
        }
      };
      {
        val __v = totalBytesSent
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      {
        val __v = totalSendFailed
        if (__v != 0L) {
          _output__.writeInt64(9, __v)
        }
      };
      {
        val __v = totalAcksReceived
        if (__v != 0L) {
          _output__.writeInt64(10, __v)
        }
      };
      {
        val __v = pendingQueueSize
        if (__v != 0) {
          _output__.writeInt32(11, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withNumMessagesSent(__v: _root_.scala.Long): Stats = copy(numMessagesSent = __v)
    def withNumBytesSent(__v: _root_.scala.Long): Stats = copy(numBytesSent = __v)
    def withNumSendFailed(__v: _root_.scala.Long): Stats = copy(numSendFailed = __v)
    def withNumAcksReceived(__v: _root_.scala.Long): Stats = copy(numAcksReceived = __v)
    def withSendMessagesRate(__v: _root_.scala.Double): Stats = copy(sendMessagesRate = __v)
    def withSendBytesRate(__v: _root_.scala.Double): Stats = copy(sendBytesRate = __v)
    def withTotalMessagesSent(__v: _root_.scala.Long): Stats = copy(totalMessagesSent = __v)
    def withTotalBytesSent(__v: _root_.scala.Long): Stats = copy(totalBytesSent = __v)
    def withTotalSendFailed(__v: _root_.scala.Long): Stats = copy(totalSendFailed = __v)
    def withTotalAcksReceived(__v: _root_.scala.Long): Stats = copy(totalAcksReceived = __v)
    def withPendingQueueSize(__v: _root_.scala.Int): Stats = copy(pendingQueueSize = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = numMessagesSent
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = numBytesSent
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = numSendFailed
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = numAcksReceived
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = sendMessagesRate
          if (__t != 0.0) __t else null
        }
        case 6 => {
          val __t = sendBytesRate
          if (__t != 0.0) __t else null
        }
        case 7 => {
          val __t = totalMessagesSent
          if (__t != 0L) __t else null
        }
        case 8 => {
          val __t = totalBytesSent
          if (__t != 0L) __t else null
        }
        case 9 => {
          val __t = totalSendFailed
          if (__t != 0L) __t else null
        }
        case 10 => {
          val __t = totalAcksReceived
          if (__t != 0L) __t else null
        }
        case 11 => {
          val __t = pendingQueueSize
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(numMessagesSent)
        case 2 => _root_.scalapb.descriptors.PLong(numBytesSent)
        case 3 => _root_.scalapb.descriptors.PLong(numSendFailed)
        case 4 => _root_.scalapb.descriptors.PLong(numAcksReceived)
        case 5 => _root_.scalapb.descriptors.PDouble(sendMessagesRate)
        case 6 => _root_.scalapb.descriptors.PDouble(sendBytesRate)
        case 7 => _root_.scalapb.descriptors.PLong(totalMessagesSent)
        case 8 => _root_.scalapb.descriptors.PLong(totalBytesSent)
        case 9 => _root_.scalapb.descriptors.PLong(totalSendFailed)
        case 10 => _root_.scalapb.descriptors.PLong(totalAcksReceived)
        case 11 => _root_.scalapb.descriptors.PInt(pendingQueueSize)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.tools.teal.pulsar.ui.api.v1.producer.Stats.type = com.tools.teal.pulsar.ui.api.v1.producer.Stats
    // @@protoc_insertion_point(GeneratedMessage[tools.teal.pulsar.ui.api.v1.Stats])
}

object Stats extends scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.producer.Stats] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.producer.Stats] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.tools.teal.pulsar.ui.api.v1.producer.Stats = {
    var __numMessagesSent: _root_.scala.Long = 0L
    var __numBytesSent: _root_.scala.Long = 0L
    var __numSendFailed: _root_.scala.Long = 0L
    var __numAcksReceived: _root_.scala.Long = 0L
    var __sendMessagesRate: _root_.scala.Double = 0.0
    var __sendBytesRate: _root_.scala.Double = 0.0
    var __totalMessagesSent: _root_.scala.Long = 0L
    var __totalBytesSent: _root_.scala.Long = 0L
    var __totalSendFailed: _root_.scala.Long = 0L
    var __totalAcksReceived: _root_.scala.Long = 0L
    var __pendingQueueSize: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __numMessagesSent = _input__.readInt64()
        case 16 =>
          __numBytesSent = _input__.readInt64()
        case 24 =>
          __numSendFailed = _input__.readInt64()
        case 32 =>
          __numAcksReceived = _input__.readInt64()
        case 41 =>
          __sendMessagesRate = _input__.readDouble()
        case 49 =>
          __sendBytesRate = _input__.readDouble()
        case 56 =>
          __totalMessagesSent = _input__.readInt64()
        case 64 =>
          __totalBytesSent = _input__.readInt64()
        case 72 =>
          __totalSendFailed = _input__.readInt64()
        case 80 =>
          __totalAcksReceived = _input__.readInt64()
        case 88 =>
          __pendingQueueSize = _input__.readInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.tools.teal.pulsar.ui.api.v1.producer.Stats(
        numMessagesSent = __numMessagesSent,
        numBytesSent = __numBytesSent,
        numSendFailed = __numSendFailed,
        numAcksReceived = __numAcksReceived,
        sendMessagesRate = __sendMessagesRate,
        sendBytesRate = __sendBytesRate,
        totalMessagesSent = __totalMessagesSent,
        totalBytesSent = __totalBytesSent,
        totalSendFailed = __totalSendFailed,
        totalAcksReceived = __totalAcksReceived,
        pendingQueueSize = __pendingQueueSize,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.tools.teal.pulsar.ui.api.v1.producer.Stats] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.tools.teal.pulsar.ui.api.v1.producer.Stats(
        numMessagesSent = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        numBytesSent = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        numSendFailed = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        numAcksReceived = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sendMessagesRate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Double]).getOrElse(0.0),
        sendBytesRate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Double]).getOrElse(0.0),
        totalMessagesSent = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        totalBytesSent = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        totalSendFailed = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        totalAcksReceived = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        pendingQueueSize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ProducerProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ProducerProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.tools.teal.pulsar.ui.api.v1.producer.Stats(
    numMessagesSent = 0L,
    numBytesSent = 0L,
    numSendFailed = 0L,
    numAcksReceived = 0L,
    sendMessagesRate = 0.0,
    sendBytesRate = 0.0,
    totalMessagesSent = 0L,
    totalBytesSent = 0L,
    totalSendFailed = 0L,
    totalAcksReceived = 0L,
    pendingQueueSize = 0
  )
  implicit class StatsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.tools.teal.pulsar.ui.api.v1.producer.Stats]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.tools.teal.pulsar.ui.api.v1.producer.Stats](_l) {
    def numMessagesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numMessagesSent)((c_, f_) => c_.copy(numMessagesSent = f_))
    def numBytesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numBytesSent)((c_, f_) => c_.copy(numBytesSent = f_))
    def numSendFailed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numSendFailed)((c_, f_) => c_.copy(numSendFailed = f_))
    def numAcksReceived: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.numAcksReceived)((c_, f_) => c_.copy(numAcksReceived = f_))
    def sendMessagesRate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.sendMessagesRate)((c_, f_) => c_.copy(sendMessagesRate = f_))
    def sendBytesRate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.sendBytesRate)((c_, f_) => c_.copy(sendBytesRate = f_))
    def totalMessagesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.totalMessagesSent)((c_, f_) => c_.copy(totalMessagesSent = f_))
    def totalBytesSent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.totalBytesSent)((c_, f_) => c_.copy(totalBytesSent = f_))
    def totalSendFailed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.totalSendFailed)((c_, f_) => c_.copy(totalSendFailed = f_))
    def totalAcksReceived: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.totalAcksReceived)((c_, f_) => c_.copy(totalAcksReceived = f_))
    def pendingQueueSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.pendingQueueSize)((c_, f_) => c_.copy(pendingQueueSize = f_))
  }
  final val NUM_MESSAGES_SENT_FIELD_NUMBER = 1
  final val NUM_BYTES_SENT_FIELD_NUMBER = 2
  final val NUM_SEND_FAILED_FIELD_NUMBER = 3
  final val NUM_ACKS_RECEIVED_FIELD_NUMBER = 4
  final val SEND_MESSAGES_RATE_FIELD_NUMBER = 5
  final val SEND_BYTES_RATE_FIELD_NUMBER = 6
  final val TOTAL_MESSAGES_SENT_FIELD_NUMBER = 7
  final val TOTAL_BYTES_SENT_FIELD_NUMBER = 8
  final val TOTAL_SEND_FAILED_FIELD_NUMBER = 9
  final val TOTAL_ACKS_RECEIVED_FIELD_NUMBER = 10
  final val PENDING_QUEUE_SIZE_FIELD_NUMBER = 11
  def of(
    numMessagesSent: _root_.scala.Long,
    numBytesSent: _root_.scala.Long,
    numSendFailed: _root_.scala.Long,
    numAcksReceived: _root_.scala.Long,
    sendMessagesRate: _root_.scala.Double,
    sendBytesRate: _root_.scala.Double,
    totalMessagesSent: _root_.scala.Long,
    totalBytesSent: _root_.scala.Long,
    totalSendFailed: _root_.scala.Long,
    totalAcksReceived: _root_.scala.Long,
    pendingQueueSize: _root_.scala.Int
  ): _root_.com.tools.teal.pulsar.ui.api.v1.producer.Stats = _root_.com.tools.teal.pulsar.ui.api.v1.producer.Stats(
    numMessagesSent,
    numBytesSent,
    numSendFailed,
    numAcksReceived,
    sendMessagesRate,
    sendBytesRate,
    totalMessagesSent,
    totalBytesSent,
    totalSendFailed,
    totalAcksReceived,
    pendingQueueSize
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tools.teal.pulsar.ui.api.v1.Stats])
}
