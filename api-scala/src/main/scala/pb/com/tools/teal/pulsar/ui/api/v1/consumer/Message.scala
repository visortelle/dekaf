// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.tools.teal.pulsar.ui.api.v1.consumer

/** @param value
  *   JSON string
  */
@SerialVersionUID(0L)
final case class Message(
    properties: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    data: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    size: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None,
    value: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    eventTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    publishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    brokerPublishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    messageId: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    sequenceId: _root_.scala.Option[_root_.scala.Double] = _root_.scala.None,
    producerName: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    key: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    orderingKey: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    topic: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    redeliveryCount: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    schemaVersion: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None,
    isReplicated: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    replicatedFrom: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Message] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      properties.foreach { __item =>
        val __value = com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (data.isDefined) {
        val __value = data.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
      };
      if (size.isDefined) {
        val __value = size.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
      };
      if (value.isDefined) {
        val __value = value.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      if (eventTime.isDefined) {
        val __value = eventTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (publishTime.isDefined) {
        val __value = publishTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (brokerPublishTime.isDefined) {
        val __value = brokerPublishTime.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (messageId.isDefined) {
        val __value = messageId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(30, __value)
      };
      if (sequenceId.isDefined) {
        val __value = sequenceId.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(8, __value)
      };
      if (producerName.isDefined) {
        val __value = producerName.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      };
      if (key.isDefined) {
        val __value = key.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      };
      if (orderingKey.isDefined) {
        val __value = orderingKey.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(11, __value)
      };
      if (topic.isDefined) {
        val __value = topic.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
      };
      if (redeliveryCount.isDefined) {
        val __value = redeliveryCount.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(13, __value)
      };
      if (schemaVersion.isDefined) {
        val __value = schemaVersion.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(14, __value)
      };
      if (isReplicated.isDefined) {
        val __value = isReplicated.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(20, __value)
      };
      if (replicatedFrom.isDefined) {
        val __value = replicatedFrom.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(21, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      properties.foreach { __v =>
        val __m = com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toBase(__v)
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.foreach { __v =>
        val __m = __v
        _output__.writeBytes(2, __m)
      };
      size.foreach { __v =>
        val __m = __v
        _output__.writeInt64(3, __m)
      };
      value.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      publishTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      eventTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sequenceId.foreach { __v =>
        val __m = __v
        _output__.writeDouble(8, __m)
      };
      producerName.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      key.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      orderingKey.foreach { __v =>
        val __m = __v
        _output__.writeBytes(11, __m)
      };
      topic.foreach { __v =>
        val __m = __v
        _output__.writeString(12, __m)
      };
      redeliveryCount.foreach { __v =>
        val __m = __v
        _output__.writeInt32(13, __m)
      };
      schemaVersion.foreach { __v =>
        val __m = __v
        _output__.writeBytes(14, __m)
      };
      isReplicated.foreach { __v =>
        val __m = __v
        _output__.writeBool(20, __m)
      };
      replicatedFrom.foreach { __v =>
        val __m = __v
        _output__.writeString(21, __m)
      };
      brokerPublishTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      messageId.foreach { __v =>
        val __m = __v
        _output__.writeBytes(30, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def clearProperties = copy(properties = _root_.scala.collection.immutable.Map.empty)
    def addProperties(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): Message = addAllProperties(__vs)
    def addAllProperties(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): Message = copy(properties = properties ++ __vs)
    def withProperties(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): Message = copy(properties = __v)
    def getData: _root_.com.google.protobuf.ByteString = data.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearData: Message = copy(data = _root_.scala.None)
    def withData(__v: _root_.com.google.protobuf.ByteString): Message = copy(data = Option(__v))
    def getSize: _root_.scala.Long = size.getOrElse(0L)
    def clearSize: Message = copy(size = _root_.scala.None)
    def withSize(__v: _root_.scala.Long): Message = copy(size = Option(__v))
    def getValue: _root_.scala.Predef.String = value.getOrElse("")
    def clearValue: Message = copy(value = _root_.scala.None)
    def withValue(__v: _root_.scala.Predef.String): Message = copy(value = Option(__v))
    def getEventTime: com.google.protobuf.timestamp.Timestamp = eventTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearEventTime: Message = copy(eventTime = _root_.scala.None)
    def withEventTime(__v: com.google.protobuf.timestamp.Timestamp): Message = copy(eventTime = Option(__v))
    def getPublishTime: com.google.protobuf.timestamp.Timestamp = publishTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearPublishTime: Message = copy(publishTime = _root_.scala.None)
    def withPublishTime(__v: com.google.protobuf.timestamp.Timestamp): Message = copy(publishTime = Option(__v))
    def getBrokerPublishTime: com.google.protobuf.timestamp.Timestamp = brokerPublishTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearBrokerPublishTime: Message = copy(brokerPublishTime = _root_.scala.None)
    def withBrokerPublishTime(__v: com.google.protobuf.timestamp.Timestamp): Message = copy(brokerPublishTime = Option(__v))
    def getMessageId: _root_.com.google.protobuf.ByteString = messageId.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearMessageId: Message = copy(messageId = _root_.scala.None)
    def withMessageId(__v: _root_.com.google.protobuf.ByteString): Message = copy(messageId = Option(__v))
    def getSequenceId: _root_.scala.Double = sequenceId.getOrElse(0.0)
    def clearSequenceId: Message = copy(sequenceId = _root_.scala.None)
    def withSequenceId(__v: _root_.scala.Double): Message = copy(sequenceId = Option(__v))
    def getProducerName: _root_.scala.Predef.String = producerName.getOrElse("")
    def clearProducerName: Message = copy(producerName = _root_.scala.None)
    def withProducerName(__v: _root_.scala.Predef.String): Message = copy(producerName = Option(__v))
    def getKey: _root_.scala.Predef.String = key.getOrElse("")
    def clearKey: Message = copy(key = _root_.scala.None)
    def withKey(__v: _root_.scala.Predef.String): Message = copy(key = Option(__v))
    def getOrderingKey: _root_.com.google.protobuf.ByteString = orderingKey.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearOrderingKey: Message = copy(orderingKey = _root_.scala.None)
    def withOrderingKey(__v: _root_.com.google.protobuf.ByteString): Message = copy(orderingKey = Option(__v))
    def getTopic: _root_.scala.Predef.String = topic.getOrElse("")
    def clearTopic: Message = copy(topic = _root_.scala.None)
    def withTopic(__v: _root_.scala.Predef.String): Message = copy(topic = Option(__v))
    def getRedeliveryCount: _root_.scala.Int = redeliveryCount.getOrElse(0)
    def clearRedeliveryCount: Message = copy(redeliveryCount = _root_.scala.None)
    def withRedeliveryCount(__v: _root_.scala.Int): Message = copy(redeliveryCount = Option(__v))
    def getSchemaVersion: _root_.com.google.protobuf.ByteString = schemaVersion.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def clearSchemaVersion: Message = copy(schemaVersion = _root_.scala.None)
    def withSchemaVersion(__v: _root_.com.google.protobuf.ByteString): Message = copy(schemaVersion = Option(__v))
    def getIsReplicated: _root_.scala.Boolean = isReplicated.getOrElse(false)
    def clearIsReplicated: Message = copy(isReplicated = _root_.scala.None)
    def withIsReplicated(__v: _root_.scala.Boolean): Message = copy(isReplicated = Option(__v))
    def getReplicatedFrom: _root_.scala.Predef.String = replicatedFrom.getOrElse("")
    def clearReplicatedFrom: Message = copy(replicatedFrom = _root_.scala.None)
    def withReplicatedFrom(__v: _root_.scala.Predef.String): Message = copy(replicatedFrom = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => properties.iterator.map(com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toBase(_)).toSeq
        case 2 => data.orNull
        case 3 => size.orNull
        case 4 => value.orNull
        case 7 => eventTime.orNull
        case 6 => publishTime.orNull
        case 22 => brokerPublishTime.orNull
        case 30 => messageId.orNull
        case 8 => sequenceId.orNull
        case 9 => producerName.orNull
        case 10 => key.orNull
        case 11 => orderingKey.orNull
        case 12 => topic.orNull
        case 13 => redeliveryCount.orNull
        case 14 => schemaVersion.orNull
        case 20 => isReplicated.orNull
        case 21 => replicatedFrom.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(properties.iterator.map(com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toBase(_).toPMessage).toVector)
        case 2 => data.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => size.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => value.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => eventTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => publishTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => brokerPublishTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 30 => messageId.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => sequenceId.map(_root_.scalapb.descriptors.PDouble(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => producerName.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => key.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => orderingKey.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => topic.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => redeliveryCount.map(_root_.scalapb.descriptors.PInt(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => schemaVersion.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => isReplicated.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => replicatedFrom.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.tools.teal.pulsar.ui.api.v1.consumer.Message.type = com.tools.teal.pulsar.ui.api.v1.consumer.Message
    // @@protoc_insertion_point(GeneratedMessage[tools.teal.pulsar.ui.api.v1.Message])
}

object Message extends scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.Message] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.Message] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.tools.teal.pulsar.ui.api.v1.consumer.Message = {
    val __properties: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var __data: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __size: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    var __value: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __eventTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __publishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __brokerPublishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __messageId: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __sequenceId: _root_.scala.Option[_root_.scala.Double] = _root_.scala.None
    var __producerName: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __key: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __orderingKey: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __topic: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var __redeliveryCount: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None
    var __schemaVersion: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    var __isReplicated: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __replicatedFrom: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __properties += com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toCustom(_root_.scalapb.LiteParser.readMessage[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry](_input__))
        case 18 =>
          __data = Option(_input__.readBytes())
        case 24 =>
          __size = Option(_input__.readInt64())
        case 34 =>
          __value = Option(_input__.readStringRequireUtf8())
        case 58 =>
          __eventTime = Option(__eventTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __publishTime = Option(__publishTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 178 =>
          __brokerPublishTime = Option(__brokerPublishTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 242 =>
          __messageId = Option(_input__.readBytes())
        case 65 =>
          __sequenceId = Option(_input__.readDouble())
        case 74 =>
          __producerName = Option(_input__.readStringRequireUtf8())
        case 82 =>
          __key = Option(_input__.readStringRequireUtf8())
        case 90 =>
          __orderingKey = Option(_input__.readBytes())
        case 98 =>
          __topic = Option(_input__.readStringRequireUtf8())
        case 104 =>
          __redeliveryCount = Option(_input__.readInt32())
        case 114 =>
          __schemaVersion = Option(_input__.readBytes())
        case 160 =>
          __isReplicated = Option(_input__.readBool())
        case 170 =>
          __replicatedFrom = Option(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.tools.teal.pulsar.ui.api.v1.consumer.Message(
        properties = __properties.result(),
        data = __data,
        size = __size,
        value = __value,
        eventTime = __eventTime,
        publishTime = __publishTime,
        brokerPublishTime = __brokerPublishTime,
        messageId = __messageId,
        sequenceId = __sequenceId,
        producerName = __producerName,
        key = __key,
        orderingKey = __orderingKey,
        topic = __topic,
        redeliveryCount = __redeliveryCount,
        schemaVersion = __schemaVersion,
        isReplicated = __isReplicated,
        replicatedFrom = __replicatedFrom,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.tools.teal.pulsar.ui.api.v1.consumer.Message] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.tools.teal.pulsar.ui.api.v1.consumer.Message(
        properties = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(com.tools.teal.pulsar.ui.api.v1.consumer.Message._typemapper_properties.toCustom(_)).toMap,
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        size = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]),
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        eventTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        publishTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        brokerPublishTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        messageId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        sequenceId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Double]]),
        producerName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        orderingKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        topic = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        redeliveryCount = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]),
        schemaVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]),
        isReplicated = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        replicatedFrom = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsumerProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsumerProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry
      case 7 => __out = com.google.protobuf.timestamp.Timestamp
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
      case 22 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.tools.teal.pulsar.ui.api.v1.consumer.Message(
    properties = _root_.scala.collection.immutable.Map.empty,
    data = _root_.scala.None,
    size = _root_.scala.None,
    value = _root_.scala.None,
    eventTime = _root_.scala.None,
    publishTime = _root_.scala.None,
    brokerPublishTime = _root_.scala.None,
    messageId = _root_.scala.None,
    sequenceId = _root_.scala.None,
    producerName = _root_.scala.None,
    key = _root_.scala.None,
    orderingKey = _root_.scala.None,
    topic = _root_.scala.None,
    redeliveryCount = _root_.scala.None,
    schemaVersion = _root_.scala.None,
    isReplicated = _root_.scala.None,
    replicatedFrom = _root_.scala.None
  )
  @SerialVersionUID(0L)
  final case class PropertiesEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PropertiesEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): PropertiesEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): PropertiesEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry.type = com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry
      // @@protoc_insertion_point(GeneratedMessage[tools.teal.pulsar.ui.api.v1.Message.PropertiesEntry])
  }
  
  object PropertiesEntry extends scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.tools.teal.pulsar.ui.api.v1.consumer.Message.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.tools.teal.pulsar.ui.api.v1.consumer.Message.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry(
      key = "",
      value = ""
    )
    implicit class PropertiesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry = _root_.com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tools.teal.pulsar.ui.api.v1.Message.PropertiesEntry])
  }
  
  implicit class MessageLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.Message]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.tools.teal.pulsar.ui.api.v1.consumer.Message](_l) {
    def properties: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.properties)((c_, f_) => c_.copy(properties = f_))
    def data: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getData)((c_, f_) => c_.copy(data = Option(f_)))
    def optionalData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.data)((c_, f_) => c_.copy(data = f_))
    def size: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getSize)((c_, f_) => c_.copy(size = Option(f_)))
    def optionalSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Long]] = field(_.size)((c_, f_) => c_.copy(size = f_))
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getValue)((c_, f_) => c_.copy(value = Option(f_)))
    def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    def eventTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getEventTime)((c_, f_) => c_.copy(eventTime = Option(f_)))
    def optionalEventTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.eventTime)((c_, f_) => c_.copy(eventTime = f_))
    def publishTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getPublishTime)((c_, f_) => c_.copy(publishTime = Option(f_)))
    def optionalPublishTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.publishTime)((c_, f_) => c_.copy(publishTime = f_))
    def brokerPublishTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getBrokerPublishTime)((c_, f_) => c_.copy(brokerPublishTime = Option(f_)))
    def optionalBrokerPublishTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.brokerPublishTime)((c_, f_) => c_.copy(brokerPublishTime = f_))
    def messageId: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getMessageId)((c_, f_) => c_.copy(messageId = Option(f_)))
    def optionalMessageId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.messageId)((c_, f_) => c_.copy(messageId = f_))
    def sequenceId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.getSequenceId)((c_, f_) => c_.copy(sequenceId = Option(f_)))
    def optionalSequenceId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Double]] = field(_.sequenceId)((c_, f_) => c_.copy(sequenceId = f_))
    def producerName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getProducerName)((c_, f_) => c_.copy(producerName = Option(f_)))
    def optionalProducerName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.producerName)((c_, f_) => c_.copy(producerName = f_))
    def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getKey)((c_, f_) => c_.copy(key = Option(f_)))
    def optionalKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.key)((c_, f_) => c_.copy(key = f_))
    def orderingKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getOrderingKey)((c_, f_) => c_.copy(orderingKey = Option(f_)))
    def optionalOrderingKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.orderingKey)((c_, f_) => c_.copy(orderingKey = f_))
    def topic: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getTopic)((c_, f_) => c_.copy(topic = Option(f_)))
    def optionalTopic: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.topic)((c_, f_) => c_.copy(topic = f_))
    def redeliveryCount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getRedeliveryCount)((c_, f_) => c_.copy(redeliveryCount = Option(f_)))
    def optionalRedeliveryCount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.redeliveryCount)((c_, f_) => c_.copy(redeliveryCount = f_))
    def schemaVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getSchemaVersion)((c_, f_) => c_.copy(schemaVersion = Option(f_)))
    def optionalSchemaVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.com.google.protobuf.ByteString]] = field(_.schemaVersion)((c_, f_) => c_.copy(schemaVersion = f_))
    def isReplicated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getIsReplicated)((c_, f_) => c_.copy(isReplicated = Option(f_)))
    def optionalIsReplicated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.isReplicated)((c_, f_) => c_.copy(isReplicated = f_))
    def replicatedFrom: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getReplicatedFrom)((c_, f_) => c_.copy(replicatedFrom = Option(f_)))
    def optionalReplicatedFrom: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.replicatedFrom)((c_, f_) => c_.copy(replicatedFrom = f_))
  }
  final val PROPERTIES_FIELD_NUMBER = 1
  final val DATA_FIELD_NUMBER = 2
  final val SIZE_FIELD_NUMBER = 3
  final val VALUE_FIELD_NUMBER = 4
  final val EVENT_TIME_FIELD_NUMBER = 7
  final val PUBLISH_TIME_FIELD_NUMBER = 6
  final val BROKER_PUBLISH_TIME_FIELD_NUMBER = 22
  final val MESSAGE_ID_FIELD_NUMBER = 30
  final val SEQUENCE_ID_FIELD_NUMBER = 8
  final val PRODUCER_NAME_FIELD_NUMBER = 9
  final val KEY_FIELD_NUMBER = 10
  final val ORDERING_KEY_FIELD_NUMBER = 11
  final val TOPIC_FIELD_NUMBER = 12
  final val REDELIVERY_COUNT_FIELD_NUMBER = 13
  final val SCHEMA_VERSION_FIELD_NUMBER = 14
  final val IS_REPLICATED_FIELD_NUMBER = 20
  final val REPLICATED_FROM_FIELD_NUMBER = 21
  @transient
  private[consumer] val _typemapper_properties: _root_.scalapb.TypeMapper[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[com.tools.teal.pulsar.ui.api.v1.consumer.Message.PropertiesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    properties: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String],
    data: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    size: _root_.scala.Option[_root_.scala.Long],
    value: _root_.scala.Option[_root_.scala.Predef.String],
    eventTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    publishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    brokerPublishTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    messageId: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    sequenceId: _root_.scala.Option[_root_.scala.Double],
    producerName: _root_.scala.Option[_root_.scala.Predef.String],
    key: _root_.scala.Option[_root_.scala.Predef.String],
    orderingKey: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    topic: _root_.scala.Option[_root_.scala.Predef.String],
    redeliveryCount: _root_.scala.Option[_root_.scala.Int],
    schemaVersion: _root_.scala.Option[_root_.com.google.protobuf.ByteString],
    isReplicated: _root_.scala.Option[_root_.scala.Boolean],
    replicatedFrom: _root_.scala.Option[_root_.scala.Predef.String]
  ): _root_.com.tools.teal.pulsar.ui.api.v1.consumer.Message = _root_.com.tools.teal.pulsar.ui.api.v1.consumer.Message(
    properties,
    data,
    size,
    value,
    eventTime,
    publishTime,
    brokerPublishTime,
    messageId,
    sequenceId,
    producerName,
    key,
    orderingKey,
    topic,
    redeliveryCount,
    schemaVersion,
    isReplicated,
    replicatedFrom
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tools.teal.pulsar.ui.api.v1.Message])
}
