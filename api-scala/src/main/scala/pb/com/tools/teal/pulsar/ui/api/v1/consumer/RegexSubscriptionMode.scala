// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.tools.teal.pulsar.ui.api.v1.consumer

sealed abstract class RegexSubscriptionMode(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = RegexSubscriptionMode
  def isRegexSubscriptionModeUnspecified: _root_.scala.Boolean = false
  def isRegexSubscriptionModePersistentOnly: _root_.scala.Boolean = false
  def isRegexSubscriptionModeNonPersistentOnly: _root_.scala.Boolean = false
  def isRegexSubscriptionModeAllTopics: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[RegexSubscriptionMode] = com.tools.teal.pulsar.ui.api.v1.consumer.RegexSubscriptionMode
  final def asRecognized: _root_.scala.Option[com.tools.teal.pulsar.ui.api.v1.consumer.RegexSubscriptionMode.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.tools.teal.pulsar.ui.api.v1.consumer.RegexSubscriptionMode.Recognized])
}

object RegexSubscriptionMode extends _root_.scalapb.GeneratedEnumCompanion[RegexSubscriptionMode] {
  sealed trait Recognized extends RegexSubscriptionMode
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[RegexSubscriptionMode] = this
  
  @SerialVersionUID(0L)
  case object REGEX_SUBSCRIPTION_MODE_UNSPECIFIED extends RegexSubscriptionMode(0) with RegexSubscriptionMode.Recognized {
    val index = 0
    val name = "REGEX_SUBSCRIPTION_MODE_UNSPECIFIED"
    override def isRegexSubscriptionModeUnspecified: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object REGEX_SUBSCRIPTION_MODE_PERSISTENT_ONLY extends RegexSubscriptionMode(1) with RegexSubscriptionMode.Recognized {
    val index = 1
    val name = "REGEX_SUBSCRIPTION_MODE_PERSISTENT_ONLY"
    override def isRegexSubscriptionModePersistentOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object REGEX_SUBSCRIPTION_MODE_NON_PERSISTENT_ONLY extends RegexSubscriptionMode(2) with RegexSubscriptionMode.Recognized {
    val index = 2
    val name = "REGEX_SUBSCRIPTION_MODE_NON_PERSISTENT_ONLY"
    override def isRegexSubscriptionModeNonPersistentOnly: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object REGEX_SUBSCRIPTION_MODE_ALL_TOPICS extends RegexSubscriptionMode(3) with RegexSubscriptionMode.Recognized {
    val index = 3
    val name = "REGEX_SUBSCRIPTION_MODE_ALL_TOPICS"
    override def isRegexSubscriptionModeAllTopics: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends RegexSubscriptionMode(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(REGEX_SUBSCRIPTION_MODE_UNSPECIFIED, REGEX_SUBSCRIPTION_MODE_PERSISTENT_ONLY, REGEX_SUBSCRIPTION_MODE_NON_PERSISTENT_ONLY, REGEX_SUBSCRIPTION_MODE_ALL_TOPICS)
  def fromValue(__value: _root_.scala.Int): RegexSubscriptionMode = __value match {
    case 0 => REGEX_SUBSCRIPTION_MODE_UNSPECIFIED
    case 1 => REGEX_SUBSCRIPTION_MODE_PERSISTENT_ONLY
    case 2 => REGEX_SUBSCRIPTION_MODE_NON_PERSISTENT_ONLY
    case 3 => REGEX_SUBSCRIPTION_MODE_ALL_TOPICS
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = ConsumerProto.javaDescriptor.getEnumTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = ConsumerProto.scalaDescriptor.enums(3)
}