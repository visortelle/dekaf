on:
  push

jobs:
  test:
    strategy:
      matrix:
        include:
          - runner: arm64
            arch: arm64
          # - runner: x64
          #   arch: x64

    runs-on: [self-hosted, "${{ matrix.runner }}"]

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git LFS Pull
        run: git lfs pull

      - name: Installing Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          install_options: --no-daemon
          extra_nix_config: experimental-features = nix-command flakes
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix build -L

      - name: Build proto files
        shell: bash
        run: nix-shell --run 'cd ./proto && make build'

      - name: Build UI and run quick tests
        if: "!(contains(github.ref, 'main') || github.ref == 'refs/heads/main')"
        shell: bash
        run: nix-shell --run 'cd ./ui && make build && make test'

      - name: Build UI and run all tests
        if: "contains(github.ref, 'main') || github.ref == 'refs/heads/main'"
        shell: bash
        run: nix-shell --run 'cd ./ui && make build && make test-all'

      - name: Build and test server
        shell: bash
        run: nix-shell --run 'cd ./server && make build && make test'

  build-docker-images:
    needs: test

    strategy:
      matrix:
        include:
          - runner: arm64
            arch: arm64
          - runner: x64
            arch: x64

    runs-on: [self-hosted, "${{ matrix.runner }}"]

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git LFS Pull
        run: git lfs pull

      - name: Installing Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          install_options: --no-daemon
          extra_nix_config: experimental-features = nix-command flakes
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix build -L

      - name: Build Docker images
        shell: bash
        run: nix-shell --run 'make build-docker-images'

  post-build-docker-images:
    runs-on: self-hosted
    needs: build-docker-images

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git LFS Pull
        run: git lfs pull

      - name: Installing Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          install_options: --no-daemon
          extra_nix_config: experimental-features = nix-command flakes
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix build -L

      - name: Create multiarch Docker manifest
        shell: bash
        run: nix-shell --run 'make create-multiarch-docker-manifest'

      # - name: Publish Helm chart
      #   shell: bash
      #   run: nix-shell --run 'make publish-helm-chart'
