// source: tools/teal/pulsar/ui/api/v1/producer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_rpc_status_pb = require('../../../../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SendRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SendResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.Stats', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tools.teal.pulsar.ui.api.v1.SendRequest.repeatedFields_, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SendRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SendResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.Stats.displayName = 'proto.tools.teal.pulsar.ui.api.v1.Stats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    producerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest;
  return proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string producer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.getProducerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.setProducerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerRequest.prototype.setTopic = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse;
  return proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateProducerResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    producerName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest;
  return proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string producer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.prototype.getProducerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerRequest.prototype.setProducerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse;
  return proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteProducerResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    producerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messagesList: msg.getMessagesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SendRequest;
  return proto.tools.teal.pulsar.ui.api.v1.SendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessagesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional string producer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.getProducerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.setProducerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated bytes messages = 2;
 * @return {!Array<string>}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.getMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes messages = 2;
 * This is a type-conversion wrapper around `getMessagesList()`
 * @return {!Array<string>}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.getMessagesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getMessagesList()));
};


/**
 * repeated bytes messages = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessagesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.getMessagesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getMessagesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.setMessagesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.addMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SendRequest.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SendResponse;
  return proto.tools.teal.pulsar.ui.api.v1.SendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SendResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.SendResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    producerName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest;
  return proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProducerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string producer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.prototype.getProducerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsRequest.prototype.setProducerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Stats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    numMessagesSent: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numBytesSent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numSendFailed: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numAcksReceived: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sendMessagesRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    sendBytesRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    totalMessagesSent: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalBytesSent: jspb.Message.getFieldWithDefault(msg, 8, 0),
    totalSendFailed: jspb.Message.getFieldWithDefault(msg, 9, 0),
    totalAcksReceived: jspb.Message.getFieldWithDefault(msg, 10, 0),
    pendingQueueSize: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.Stats;
  return proto.tools.teal.pulsar.ui.api.v1.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumMessagesSent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumBytesSent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumSendFailed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumAcksReceived(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSendMessagesRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSendBytesRate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalMessagesSent(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalBytesSent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalSendFailed(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalAcksReceived(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPendingQueueSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.Stats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Stats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumMessagesSent();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumBytesSent();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumSendFailed();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNumAcksReceived();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSendMessagesRate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSendBytesRate();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getTotalMessagesSent();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTotalBytesSent();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getTotalSendFailed();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getTotalAcksReceived();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getPendingQueueSize();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional int64 num_messages_sent = 1;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getNumMessagesSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setNumMessagesSent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 num_bytes_sent = 2;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getNumBytesSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setNumBytesSent = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 num_send_failed = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getNumSendFailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setNumSendFailed = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 num_acks_received = 4;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getNumAcksReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setNumAcksReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double send_messages_rate = 5;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getSendMessagesRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setSendMessagesRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double send_bytes_rate = 6;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getSendBytesRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setSendBytesRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int64 total_messages_sent = 7;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getTotalMessagesSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setTotalMessagesSent = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 total_bytes_sent = 8;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getTotalBytesSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setTotalBytesSent = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 total_send_failed = 9;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getTotalSendFailed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setTotalSendFailed = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 total_acks_received = 10;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getTotalAcksReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setTotalAcksReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 pending_queue_size = 11;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.getPendingQueueSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Stats} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Stats.prototype.setPendingQueueSize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.tools.teal.pulsar.ui.api.v1.Stats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse;
  return proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.tools.teal.pulsar.ui.api.v1.Stats;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tools.teal.pulsar.ui.api.v1.Stats.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Stats stats = 2;
 * @return {?proto.tools.teal.pulsar.ui.api.v1.Stats}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.getStats = function() {
  return /** @type{?proto.tools.teal.pulsar.ui.api.v1.Stats} */ (
    jspb.Message.getWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.Stats, 2));
};


/**
 * @param {?proto.tools.teal.pulsar.ui.api.v1.Stats|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.GetStatsResponse.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.tools.teal.pulsar.ui.api.v1);
