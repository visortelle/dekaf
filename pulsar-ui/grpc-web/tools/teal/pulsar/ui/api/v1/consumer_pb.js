// source: tools/teal/pulsar/ui/api/v1/consumer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_rpc_status_pb = require('../../../../../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.ConsumerStats', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.Message', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.MessageId', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.PauseRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.PauseResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.ResumeRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.ResumeResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SeekRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SeekRequest.SeekCase', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SeekResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.SubscriptionType', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.TopicsSelector', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.TopicsSelectorCase', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames', null, global);
goog.exportSymbol('proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.MessageId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.MessageId.displayName = 'proto.tools.teal.pulsar.ui.api.v1.MessageId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.Message.displayName = 'proto.tools.teal.pulsar.ui.api.v1.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.repeatedFields_, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.displayName = 'proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.displayName = 'proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.oneofGroups_);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.TopicsSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.displayName = 'proto.tools.teal.pulsar.ui.api.v1.TopicsSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.ResumeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.ResumeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.ConsumerStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.displayName = 'proto.tools.teal.pulsar.ui.api.v1.ConsumerStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.repeatedFields_, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.ResumeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.ResumeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.PauseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.PauseRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.PauseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.PauseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.PauseResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.PauseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SeekRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SeekRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SeekRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SeekResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SeekResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SeekResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.displayName = 'proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.MessageId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.MessageId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.toObject = function(includeInstance, msg) {
  var f, obj = {
    ledgerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entryId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    batchId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    partitionIdx: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.MessageId;
  return proto.tools.teal.pulsar.ui.api.v1.MessageId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.MessageId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLedgerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntryId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartitionIdx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.MessageId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.MessageId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLedgerId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEntryId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getBatchId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPartitionIdx();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 ledger_id = 1;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.getLedgerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.setLedgerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 entry_id = 2;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.getEntryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.setEntryId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 batch_id = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.getBatchId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.setBatchId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 partition_idx = 4;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.getPartitionIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.MessageId} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.MessageId.prototype.setPartitionIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertiesMap: (f = msg.getPropertiesMap()) ? f.toObject(includeInstance, undefined) : [],
    data: msg.getData_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventTime: (f = msg.getEventTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishTime: (f = msg.getPublishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    brokerPublishTime: (f = msg.getBrokerPublishTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    messageId: msg.getMessageId_asB64(),
    sequenceId: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    producerName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    key: jspb.Message.getFieldWithDefault(msg, 10, ""),
    orderingKey: msg.getOrderingKey_asB64(),
    topic: jspb.Message.getFieldWithDefault(msg, 12, ""),
    redeliveryCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    schemaVersion: msg.getSchemaVersion_asB64(),
    isReplicated: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    replicatedFrom: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.Message;
  return proto.tools.teal.pulsar.ui.api.v1.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getPropertiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEventTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishTime(value);
      break;
    case 22:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBrokerPublishTime(value);
      break;
    case 30:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessageId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSequenceId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOrderingKey(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRedeliveryCount(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchemaVersion(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReplicated(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplicatedFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBrokerPublishTime();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBytes(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * map<string, string> properties = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getPropertiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearPropertiesMap = function() {
  this.getPropertiesMap().clear();
  return this;};


/**
 * optional bytes data = 2;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setData = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearData = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 size = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string value = 4;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearValue = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp event_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getEventTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setEventTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearEventTime = function() {
  return this.setEventTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasEventTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp publish_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getPublishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setPublishTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearPublishTime = function() {
  return this.setPublishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasPublishTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp broker_publish_time = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getBrokerPublishTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setBrokerPublishTime = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearBrokerPublishTime = function() {
  return this.setBrokerPublishTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasBrokerPublishTime = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bytes message_id = 30;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * optional bytes message_id = 30;
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getMessageId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessageId()));
};


/**
 * optional bytes message_id = 30;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getMessageId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessageId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setMessageId = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearMessageId = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional double sequence_id = 8;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getSequenceId = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setSequenceId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearSequenceId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasSequenceId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string producer_name = 9;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getProducerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setProducerName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearProducerName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasProducerName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string key = 10;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearKey = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasKey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes ordering_key = 11;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getOrderingKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes ordering_key = 11;
 * This is a type-conversion wrapper around `getOrderingKey()`
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getOrderingKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOrderingKey()));
};


/**
 * optional bytes ordering_key = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOrderingKey()`
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getOrderingKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOrderingKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setOrderingKey = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearOrderingKey = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasOrderingKey = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string topic = 12;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setTopic = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearTopic = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasTopic = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 redelivery_count = 13;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getRedeliveryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setRedeliveryCount = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearRedeliveryCount = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasRedeliveryCount = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bytes schema_version = 14;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getSchemaVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes schema_version = 14;
 * This is a type-conversion wrapper around `getSchemaVersion()`
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getSchemaVersion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchemaVersion()));
};


/**
 * optional bytes schema_version = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchemaVersion()`
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getSchemaVersion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchemaVersion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setSchemaVersion = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearSchemaVersion = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasSchemaVersion = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool is_replicated = 20;
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getIsReplicated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setIsReplicated = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearIsReplicated = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasIsReplicated = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string replicated_from = 21;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.getReplicatedFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.setReplicatedFrom = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.clearReplicatedFrom = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.Message.prototype.hasReplicatedFrom = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.toObject = function(includeInstance, msg) {
  var f, obj = {
    topicsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames;
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTopics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string topics = 1;
 * @return {!Array<string>}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.getTopicsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.setTopicsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.addTopics = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.prototype.clearTopicsList = function() {
  return this.setTopicsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.toObject = function(includeInstance, msg) {
  var f, obj = {
    pattern: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regexSubscriptionMode: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex;
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPattern(value);
      break;
    case 3:
      var value = /** @type {!proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode} */ (reader.readEnum());
      msg.setRegexSubscriptionMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string pattern = 2;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.getPattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.setPattern = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.clearPattern = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.hasPattern = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RegexSubscriptionMode regex_subscription_mode = 3;
 * @return {!proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.getRegexSubscriptionMode = function() {
  return /** @type {!proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.setRegexSubscriptionMode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.clearRegexSubscriptionMode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.prototype.hasRegexSubscriptionMode = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.TopicsSelectorCase = {
  TOPICS_SELECTOR_NOT_SET: 0,
  BY_NAMES: 1,
  BY_REGEX: 2
};

/**
 * @return {proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.TopicsSelectorCase}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.getTopicsSelectorCase = function() {
  return /** @type {proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.TopicsSelectorCase} */(jspb.Message.computeOneofCase(this, proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    byNames: (f = msg.getByNames()) && proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.toObject(includeInstance, f),
    byRegex: (f = msg.getByRegex()) && proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelector;
  return proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.deserializeBinaryFromReader);
      msg.setByNames(value);
      break;
    case 2:
      var value = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.deserializeBinaryFromReader);
      msg.setByRegex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getByNames();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames.serializeBinaryToWriter
    );
  }
  f = message.getByRegex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex.serializeBinaryToWriter
    );
  }
};


/**
 * optional TopicsSelectorByNames by_names = 1;
 * @return {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.getByNames = function() {
  return /** @type{?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames} */ (
    jspb.Message.getWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames, 1));
};


/**
 * @param {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByNames|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.setByNames = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.clearByNames = function() {
  return this.setByNames(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.hasByNames = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TopicsSelectorByRegex by_regex = 2;
 * @return {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.getByRegex = function() {
  return /** @type{?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex} */ (
    jspb.Message.getWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex, 2));
};


/**
 * @param {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelectorByRegex|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.setByRegex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.clearByRegex = function() {
  return this.setByRegex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.prototype.hasByRegex = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    topicsSelector: (f = msg.getTopicsSelector()) && proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.toObject(includeInstance, f),
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subscriptionName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    priorityLevel: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startPaused: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    subscriptionMode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    subscriptionType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    subscriptionInitialPosition: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ackTimeoutMs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ackTimeoutTickTimeMs: jspb.Message.getFieldWithDefault(msg, 9, 0),
    expireTimeOfIncompleteChunkedMessageMs: jspb.Message.getFieldWithDefault(msg, 10, 0),
    acknowledgmentGroupTimeMs: jspb.Message.getFieldWithDefault(msg, 11, 0),
    negativeAckRedeliveryDelayMs: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest;
  return proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.tools.teal.pulsar.ui.api.v1.TopicsSelector;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.deserializeBinaryFromReader);
      msg.setTopicsSelector(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriorityLevel(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStartPaused(value);
      break;
    case 5:
      var value = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode} */ (reader.readEnum());
      msg.setSubscriptionMode(value);
      break;
    case 6:
      var value = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionType} */ (reader.readEnum());
      msg.setSubscriptionType(value);
      break;
    case 7:
      var value = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition} */ (reader.readEnum());
      msg.setSubscriptionInitialPosition(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAckTimeoutMs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAckTimeoutTickTimeMs(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireTimeOfIncompleteChunkedMessageMs(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAcknowledgmentGroupTimeMs(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNegativeAckRedeliveryDelayMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopicsSelector();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.tools.teal.pulsar.ui.api.v1.TopicsSelector.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionType} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt64(
      12,
      f
    );
  }
};


/**
 * optional TopicsSelector topics_selector = 100;
 * @return {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelector}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getTopicsSelector = function() {
  return /** @type{?proto.tools.teal.pulsar.ui.api.v1.TopicsSelector} */ (
    jspb.Message.getWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.TopicsSelector, 100));
};


/**
 * @param {?proto.tools.teal.pulsar.ui.api.v1.TopicsSelector|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setTopicsSelector = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearTopicsSelector = function() {
  return this.setTopicsSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasTopicsSelector = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearConsumerName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasConsumerName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string subscription_name = 2;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getSubscriptionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setSubscriptionName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearSubscriptionName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasSubscriptionName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 priority_level = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getPriorityLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setPriorityLevel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearPriorityLevel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasPriorityLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool start_paused = 4;
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getStartPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setStartPaused = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearStartPaused = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasStartPaused = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SubscriptionMode subscription_mode = 5;
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getSubscriptionMode = function() {
  return /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setSubscriptionMode = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearSubscriptionMode = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasSubscriptionMode = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SubscriptionType subscription_type = 6;
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionType}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getSubscriptionType = function() {
  return /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionType} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setSubscriptionType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearSubscriptionType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasSubscriptionType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SubscriptionInitialPosition subscription_initial_position = 7;
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getSubscriptionInitialPosition = function() {
  return /** @type {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setSubscriptionInitialPosition = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearSubscriptionInitialPosition = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasSubscriptionInitialPosition = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 ack_timeout_ms = 8;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getAckTimeoutMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setAckTimeoutMs = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearAckTimeoutMs = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasAckTimeoutMs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 ack_timeout_tick_time_ms = 9;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getAckTimeoutTickTimeMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setAckTimeoutTickTimeMs = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearAckTimeoutTickTimeMs = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasAckTimeoutTickTimeMs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 expire_time_of_incomplete_chunked_message_ms = 10;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getExpireTimeOfIncompleteChunkedMessageMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setExpireTimeOfIncompleteChunkedMessageMs = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearExpireTimeOfIncompleteChunkedMessageMs = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasExpireTimeOfIncompleteChunkedMessageMs = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 acknowledgment_group_time_ms = 11;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getAcknowledgmentGroupTimeMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setAcknowledgmentGroupTimeMs = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearAcknowledgmentGroupTimeMs = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasAcknowledgmentGroupTimeMs = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 negative_ack_redelivery_delay_ms = 12;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.getNegativeAckRedeliveryDelayMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.setNegativeAckRedeliveryDelayMs = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.clearNegativeAckRedeliveryDelayMs = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerRequest.prototype.hasNegativeAckRedeliveryDelayMs = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse;
  return proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.CreateConsumerResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest;
  return proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse;
  return proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.DeleteConsumerResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeConsumerStats: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.ResumeRequest;
  return proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeConsumerStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeConsumerStats();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_consumer_stats = 2;
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.getIncludeConsumerStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeRequest.prototype.setIncludeConsumerStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ConsumerStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ConsumerStats}
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.ConsumerStats;
  return proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ConsumerStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ConsumerStats}
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ConsumerStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.tools.teal.pulsar.ui.api.v1.Message.toObject, includeInstance),
    processedMessages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    consumerStats: (f = msg.getConsumerStats()) && proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.ResumeResponse;
  return proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.tools.teal.pulsar.ui.api.v1.Message;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessedMessages(value);
      break;
    case 4:
      var value = new proto.tools.teal.pulsar.ui.api.v1.ConsumerStats;
      reader.readMessage(value,proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.deserializeBinaryFromReader);
      msg.setConsumerStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tools.teal.pulsar.ui.api.v1.Message.serializeBinaryToWriter
    );
  }
  f = message.getProcessedMessages();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getConsumerStats();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tools.teal.pulsar.ui.api.v1.ConsumerStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Message messages = 2;
 * @return {!Array<!proto.tools.teal.pulsar.ui.api.v1.Message>}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.tools.teal.pulsar.ui.api.v1.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.Message, 2));
};


/**
 * @param {!Array<!proto.tools.teal.pulsar.ui.api.v1.Message>} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tools.teal.pulsar.ui.api.v1.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tools.teal.pulsar.ui.api.v1.Message}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tools.teal.pulsar.ui.api.v1.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional int64 processed_messages = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.getProcessedMessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.setProcessedMessages = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional ConsumerStats consumer_stats = 4;
 * @return {?proto.tools.teal.pulsar.ui.api.v1.ConsumerStats}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.getConsumerStats = function() {
  return /** @type{?proto.tools.teal.pulsar.ui.api.v1.ConsumerStats} */ (
    jspb.Message.getWrapperField(this, proto.tools.teal.pulsar.ui.api.v1.ConsumerStats, 4));
};


/**
 * @param {?proto.tools.teal.pulsar.ui.api.v1.ConsumerStats|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.setConsumerStats = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.ResumeResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.clearConsumerStats = function() {
  return this.setConsumerStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.ResumeResponse.prototype.hasConsumerStats = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.PauseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.PauseRequest;
  return proto.tools.teal.pulsar.ui.api.v1.PauseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.PauseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.PauseRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.PauseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.PauseResponse;
  return proto.tools.teal.pulsar.ui.api.v1.PauseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.PauseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.PauseResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.PauseResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.SeekCase = {
  SEEK_NOT_SET: 0,
  TIMESTAMP: 2,
  MESSAGE_ID: 3
};

/**
 * @return {proto.tools.teal.pulsar.ui.api.v1.SeekRequest.SeekCase}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getSeekCase = function() {
  return /** @type {proto.tools.teal.pulsar.ui.api.v1.SeekRequest.SeekCase} */(jspb.Message.computeOneofCase(this, proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SeekRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    messageId: msg.getMessageId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SeekRequest;
  return proto.tools.teal.pulsar.ui.api.v1.SeekRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SeekRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes message_id = 3;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes message_id = 3;
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getMessageId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessageId()));
};


/**
 * optional bytes message_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.getMessageId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessageId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.setMessageId = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.clearMessageId = function() {
  return jspb.Message.setOneofField(this, 3, proto.tools.teal.pulsar.ui.api.v1.SeekRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekRequest.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SeekResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SeekResponse;
  return proto.tools.teal.pulsar.ui.api.v1.SeekResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SeekResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SeekResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.SeekResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subscriptionName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest;
  return proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubscriptionName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string consumer_name = 1;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.getConsumerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.setConsumerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subscription_name = 2;
 * @return {string}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.getSubscriptionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.setSubscriptionName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 count = 3;
 * @return {number}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse;
  return proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse} returns this
*/
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse} returns this
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tools.teal.pulsar.ui.api.v1.SkipMessagesResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.SubscriptionMode = {
  SUBSCRIPTION_MODE_UNSPECIFIED: 0,
  SUBSCRIPTION_MODE_DURABLE: 1,
  SUBSCRIPTION_MODE_NON_DURABLE: 2
};

/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.SubscriptionType = {
  SUBSCRIPTION_TYPE_UNSPECIFIED: 0,
  SUBSCRIPTION_TYPE_EXCLUSIVE: 1,
  SUBSCRIPTION_TYPE_FAILOVER: 2,
  SUBSCRIPTION_TYPE_SHARED: 3,
  SUBSCRIPTION_TYPE_KEY_SHARED: 4
};

/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.SubscriptionInitialPosition = {
  SUBSCRIPTION_INITIAL_POSITION_UNSPECIFIED: 0,
  SUBSCRIPTION_INITIAL_POSITION_EARLIEST: 1,
  SUBSCRIPTION_INITIAL_POSITION_LATEST: 2
};

/**
 * @enum {number}
 */
proto.tools.teal.pulsar.ui.api.v1.RegexSubscriptionMode = {
  REGEX_SUBSCRIPTION_MODE_UNSPECIFIED: 0,
  REGEX_SUBSCRIPTION_MODE_PERSISTENT_ONLY: 1,
  REGEX_SUBSCRIPTION_MODE_NON_PERSISTENT_ONLY: 2,
  REGEX_SUBSCRIPTION_MODE_ALL_TOPICS: 3
};

goog.object.extend(exports, proto.tools.teal.pulsar.ui.api.v1);
