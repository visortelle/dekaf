.Input {
  display: flex;
  position: relative;
  align-items: center;
  margin: 1rem;
}

.InputIcon {
  position: absolute;
  opacity: 0.5;
  height: 100%;
  width: 42rem;
  display: flex;
  align-items: center;
  padding-left: 12rem;
  pointer-events: none;
  padding-top: 4rem; /* Fix svg align. */
}

.InputIcon svg {
  width: 24rem;
  height: 24rem;
  fill: var(--text-color);
}

.InputInput {
  position: relative;
  background-color: #fff;
  border-radius: 6rem;
  border: 1px solid var(--border-color);
  box-shadow: 1rem 1rem 1rem rgba(0, 0, 0, 0.27);
  padding: 0 12rem;
  height: 36rem;
  display: flex;
  flex: 1 0 auto;
  font-size: 14rem;
  color: var(--text-color);
  caret-color: var(--text-color);
  transition: var(--transition-short);
  width: 100%;
}

.InputInput.SmallInputInput {
  height: 28rem;
}

.InputInput.InputInputWithError,
.InputInput.InputInputWithError:focus {
  border: 2px solid var(--accent-color-red);
}

.InputInputWithIcon {
  padding: 12rem 42rem 12rem 42rem;
}

.InputInput:focus {
  border: 2px solid var(--accent-color-blue);
  transition: var(--transition-short);
}

.InputInput:focus {
  outline: none;
}

.InputInput::placeholder {
  opacity: 0.5;
  color: var(--text-color);
}

.InputInputClearable {
  padding-right: 32rem;
}

.Clear {
  position: absolute;
  right: 8rem;
  opacity: 0.5;
}
.Clear:hover {
  opacity: 1;
  cursor: pointer;
}
.Clear svg {
  width: 18rem;
  height: 18rem;
  fill: var(--text-color);
}
