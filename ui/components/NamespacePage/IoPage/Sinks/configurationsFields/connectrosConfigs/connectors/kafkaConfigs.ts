import { IoConfigField } from "../../../../IoConfigField/IoConfigField";
import { StringMap } from "../../configurationsFields";

export type KafkaConfigs = {
  [key: string]: string | number | StringMap,
  bootstrapServers: string,
  securityProtocol: string,
  saslMechanism: string,
  saslJaasConfig: string,
  sslEnabledProtocols: string,
  sslEndpointIdentificationAlgorithm: string,
  sslTruststoreLocation: string,
  sslTruststorePassword: string,
  acks: string,
  batchsize: number,
  maxRequestSize: number,
  topic: string,
  keyDeserializationClass: string,
  valueDeserializationClass: string,
  producerConfigProperties: StringMap,
}

export const kafkaFields: IoConfigField[] = [
  {
    name: 'bootstrapServers',
    type: 'string',
    isRequired: true,
    help: 'help',
    label: 'Bootstrap servers',
  },
  {
    name: 'securityProtocol',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'Security protocol',
  },
  {
    name: 'saslMechanism',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'Sasl mechanism',
  },
  {
    name: 'saslJaasConfig',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'Sasl jaas config',
  },
  {
    name: 'sslEnabledProtocols',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'SSL enabled protocols',
  },
  {
    name: 'sslEndpointIdentificationAlgorithm',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'SSL endpoint identification algorithm',
  },
  {
    name: 'sslTruststoreLocation',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'SSL truststore location',
  },
  {
    name: 'sslTruststorePassword',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'SSL truststore password',
  },
  {
    name: 'acks',
    type: 'string',
    isRequired: true,
    help: 'help',
    label: 'Acks',
  },
  {
    name: 'batchsize',
    type: 'bytes',
    isRequired: false,
    help: 'help',
    label: 'Batchsize',
  },
  {
    name: 'maxRequestSize',
    type: 'bytes',
    isRequired: false,
    help: 'help',
    label: 'Max request size',
  },
  {
    name: 'topic',
    type: 'string',
    isRequired: true,
    help: 'help',
    label: 'Topic',
  },
  {
    name: 'keyDeserializationClass',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'Key deserialization class',
  },
  {
    name: 'valueDeserializationClass',
    type: 'string',
    isRequired: false,
    help: 'help',
    label: 'Value deserialization class',
  },
  {
    name: 'producerConfigProperties',
    type: 'map',
    isRequired: false,
    help: 'help',
    label: 'Producer config properties',
    mapType: 'string',
  },
]

export const kafkaDefault: KafkaConfigs = {
  bootstrapServers: '',
  securityProtocol: '',
  saslMechanism: '',
  saslJaasConfig: '',
  sslEnabledProtocols: '',
  sslEndpointIdentificationAlgorithm: '',
  sslTruststoreLocation: '',
  sslTruststorePassword: '',
  acks: '',
  batchsize: 16384,
  maxRequestSize: 1048576,
  topic: '',
  keyDeserializationClass: 'org.apache.kafka.common.serialization.StringSerializer',
  valueDeserializationClass: 'org.apache.kafka.common.serialization.ByteArraySerializer',
  producerConfigProperties: {},
}