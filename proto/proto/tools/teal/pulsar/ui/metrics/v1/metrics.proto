syntax = "proto3";

package tools.teal.pulsar.ui.metrics.v1;

import "google/rpc/status.proto";

message TenantMetrics {
  double brk_add_entry_latency_buckets_overflow = 1;
  double brk_in_rate = 2;
  double brk_in_tp_rate = 3;
  double brk_max_replication_delay_second = 4;
  double brk_msg_backlog = 5;
  double brk_no_of_consumers = 6;
  double brk_no_of_producers = 7;
  double brk_no_of_replicators = 8;
  double brk_no_of_subscriptions = 9;
  double brk_out_rate = 10;
  double brk_out_tp_rate = 11;
  double brk_replication_backlog = 12;
  double brk_storage_size = 13;
}

message NamespaceMetrics {
  double brk_add_entry_latency_buckets_overflow = 1;
  double brk_in_rate = 2;
  double brk_in_tp_rate = 3;
  double brk_max_replication_delay_second = 4;
  double brk_msg_backlog = 5;
  double brk_no_of_consumers = 6;
  double brk_no_of_producers = 7;
  double brk_no_of_replicators = 8;
  double brk_no_of_subscriptions = 9;
  double brk_out_rate = 10;
  double brk_out_tp_rate = 11;
  double brk_replication_backlog = 12;
  double brk_storage_size = 13;
}

message GetTenantsMetricsRequest {
  repeated string tenants = 1;
}

message GetTenantsMetricsResponse {
  google.rpc.Status status = 1;
  map<string, TenantMetrics> tenants_metrics = 2;
}

message GetNamespacesMetricsRequest {
  repeated string namespaces = 1;
}

message GetNamespacesMetricsResponse {
  google.rpc.Status status = 1;
  map<string, NamespaceMetrics> namespaces_metrics = 2;
}

service MetricsService {
  rpc GetTenantsMetrics(GetTenantsMetricsRequest) returns (GetTenantsMetricsResponse);
  rpc GetNamespacesMetrics(GetNamespacesMetricsRequest) returns (GetNamespacesMetricsResponse);
}
