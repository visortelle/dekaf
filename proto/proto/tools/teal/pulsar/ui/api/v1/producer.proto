syntax = "proto3";

package tools.teal.pulsar.ui.api.v1;

import "google/rpc/status.proto";
import "google/protobuf/timestamp.proto";

message FixedJsonGenerator {
  string json = 1;
}

message JsJsonGenerator {
  string js_code = 1;
}

enum InterpretJsonAs {
  INTERPRET_JSON_AS_UNSPECIFIED = 0;
  INTERPRET_JSON_AS_JSON = 1;
  INTERPRET_JSON_AS_BASE64_ENCODED_BYTES = 2;
  INTERPRET_JSON_AS_HEX_BYTES = 3;
}

message JsonGenerator {
  oneof generator {
    FixedJsonGenerator fixed_generator = 11;
    JsJsonGenerator js_generator = 12;
  }
  InterpretJsonAs interpret_json_as = 2;
}

message AutoEventTimeGenerator {}

message FixedEventTimeGenerator {
  google.protobuf.Timestamp event_time = 1;
}

message EventTimeGenerator {
  oneof generator {
    AutoEventTimeGenerator auto_generator = 11;
    FixedEventTimeGenerator fixed_generator = 12;
    JsJsonGenerator js_generator = 13;
  }
}

message MessageGenerator {
  JsonGenerator key_generator = 1;
  JsonGenerator value_generator = 2;
  JsonGenerator properties_generator = 3;
  EventTimeGenerator event_time_generator = 4;
}

message ProducerSessionPauseTrigger {
  int64 time_elapsed_ms = 2;
  int64 messages_produced = 3;
}

message ProducerSessionFlowGeneratorStep {
  string target_topic = 1;
  MessageGenerator generator = 2;
  int64 generator_runs_count = 3;
  int64 generator_runs_interval_ms = 4;
}

message ProducerSessionFlowWaitStep {
  int64 wait_ms = 1;
}

message ProducerSessionFlowStep {
  oneof step {
    ProducerSessionFlowGeneratorStep generator_step = 1;
    ProducerSessionFlowWaitStep wait_step = 2;
    ProducerSessionFlowStep flow_step = 3;
  }
}

message ProducerSessionFlow {
  repeated ProducerSessionFlowStep steps = 1;
}

message ProducerSession {
  ProducerSessionFlow flow = 1;
  ProducerSessionPauseTrigger pause_trigger = 2;
}

message CreateProducerSessionRequest {
  ProducerSession session = 1;
  string session_id = 2;
}

message CreateProducerSessionResponse {
  google.rpc.Status status = 1;
}

message DeleteProducerSessionRequest {
  string session_id = 1;
}

message DeleteProducerSessionResponse {
  google.rpc.Status status = 1;
}

message ProducerStats {
  int64 num_messages_sent = 1;
  int64 num_bytes_sent = 2;
  int64 num_send_failed = 3;
  int64 num_acks_received = 4;
  double send_messages_rate = 5;
  double send_bytes_rate = 6;
  int64 total_messages_sent = 7;
  int64 total_bytes_sent = 8;
  int64 total_send_failed = 9;
  int64 total_acks_received = 10;
  int32 pending_queue_size = 11;
}

message ProducerSessionStats {
  map<string, ProducerStats> stats_per_producer = 1;
}

message GetProducerSessionStatsRequest {
  string session_id = 1;
}

message GetProducerSessionStatsResponse {
  google.rpc.Status status = 1;
  ProducerSessionStats stats = 2;
}

message PauseProducerSessionRequest {
  string session_id = 1;
}

message PauseProducerSessionResponse {
  google.rpc.Status status = 1;
}

message ResumeProducerSessionRequest {
  string session_id = 1;
}

message ResumeProducerSessionResponse {
  google.rpc.Status status = 1;
}

service ProducerService {
  rpc CreateProducerSession(CreateProducerSessionRequest) returns (CreateProducerSessionResponse);
  rpc DeleteProducerSession(DeleteProducerSessionRequest) returns (DeleteProducerSessionResponse);
  rpc GetProducerSessionStats(GetProducerSessionStatsRequest) returns (GetProducerSessionStatsResponse);
  rpc PauseProducerSession(PauseProducerSessionRequest) returns (PauseProducerSessionResponse);
  rpc ResumeProducerSession(ResumeProducerSessionRequest) returns (ResumeProducerSessionResponse);
}
