syntax = "proto3";

package tools.teal.pulsar.ui.namespace.v1;

import "google/rpc/status.proto";

message CreateNamespaceRequest {
  string namespace_name = 1;
  int32 num_bundles = 2;
  repeated string replication_clusters = 3;
}

message CreateNamespaceResponse {
  google.rpc.Status status = 1;
}

message DeleteNamespaceRequest {
  string namespace_name = 1;
  bool force = 2;
}

message DeleteNamespaceResponse {
  google.rpc.Status status = 1;
}

enum SchemaCompatibilityStrategy {
  SCHEMA_COMPATIBILITY_STRATEGY_UNSPECIFIED = 0;
  SCHEMA_COMPATIBILITY_STRATEGY_UNDEFINED = 100;
  SCHEMA_COMPATIBILITY_STRATEGY_ALWAYS_INCOMPATIBLE = 1;
  SCHEMA_COMPATIBILITY_STRATEGY_ALWAYS_COMPATIBLE = 2;
  SCHEMA_COMPATIBILITY_STRATEGY_BACKWARD = 3;
  SCHEMA_COMPATIBILITY_STRATEGY_FORWARD = 4;
  SCHEMA_COMPATIBILITY_STRATEGY_FULL = 5;
  SCHEMA_COMPATIBILITY_STRATEGY_BACKWARD_TRANSITIVE = 6;
  SCHEMA_COMPATIBILITY_STRATEGY_FORWARD_TRANSITIVE = 7;
  SCHEMA_COMPATIBILITY_STRATEGY_FULL_TRANSITIVE = 8;
}
message GetSchemaCompatibilityStrategyRequest {
  string namespace = 1;
}
message GetSchemaCompatibilityStrategyResponse {
  google.rpc.Status status = 1;
  SchemaCompatibilityStrategy strategy = 2;
}
message SetSchemaCompatibilityStrategyRequest {
  string namespace = 1;
  SchemaCompatibilityStrategy strategy = 2;
}
message SetSchemaCompatibilityStrategyResponse {
  google.rpc.Status status = 1;
}

message GetIsAllowAutoUpdateSchemaRequest {
  string namespace = 1;
}
message GetIsAllowAutoUpdateSchemaResponse {
  google.rpc.Status status = 1;
  bool is_allow_auto_update_schema = 2;
}
message SetIsAllowAutoUpdateSchemaRequest {
  string namespace = 1;
  bool is_allow_auto_update_schema = 2;
}
message SetIsAllowAutoUpdateSchemaResponse {
  google.rpc.Status status = 1;
}

message GetSchemaValidationEnforceRequest {
  string namespace = 1;
}
message GetSchemaValidationEnforceResponse {
  google.rpc.Status status = 1;
  bool schema_validation_enforced = 2;
}
message SetSchemaValidationEnforceRequest {
  string namespace = 1;
  bool schema_validation_enforced = 2;
}
message SetSchemaValidationEnforceResponse {
  google.rpc.Status status = 1;
}

message GetNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
}
message GetNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
  string namespace_anti_affinity_group = 2;
}
message SetNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
  string namespace_anti_affinity_group = 2;
}
message SetNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message RemoveNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
}
message RemoveNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message GetAntiAffinityNamespacesRequest {
  string namespace_anti_affinity_group = 1;
  string tenant = 2;
  string cluster = 3;
}
message GetAntiAffinityNamespacesResponse {
  google.rpc.Status status = 1;
  repeated string namespaces = 2;
}

enum AutoSubscriptionCreation {
  AUTO_SUBSCRIPTION_CREATION_UNSPECIFIED = 0;
  AUTO_SUBSCRIPTION_CREATION_ENABLED = 1;
  AUTO_SUBSCRIPTION_CREATION_DISABLED = 2;
  AUTO_SUBSCRIPTION_CREATION_INHERITED_FROM_BROKER_CONFIG = 3;
}
message GetAutoSubscriptionCreationRequest {
  string namespace = 1;
}
message GetAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
  AutoSubscriptionCreation auto_subscription_creation = 2;
}
message SetAutoSubscriptionCreationRequest {
  string namespace = 1;
  AutoSubscriptionCreation auto_subscription_creation = 2;
}
message SetAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
}
message RemoveAutoSubscriptionCreationRequest {
  string namespace = 1;
}
message RemoveAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
}

enum AutoTopicCreation {
  AUTO_TOPIC_CREATION_UNSPECIFIED = 0;
  AUTO_TOPIC_CREATION_SPECIFIED = 1;
  AUTO_TOPIC_CREATION_INHERITED_FROM_BROKER_CONFIG = 2;
}
enum AutoTopicCreationTopicType {
  AUTO_TOPIC_CREATION_TOPIC_TYPE_UNSPECIFIED = 0;
  AUTO_TOPIC_CREATION_TOPIC_TYPE_PARTITIONED = 1;
  AUTO_TOPIC_CREATION_TOPIC_TYPE_NON_PARTITIONED = 2;
}
message AutoTopicCreationOverride {
  bool is_allow_topic_creation = 1;
  AutoTopicCreationTopicType topic_type = 2;
  int32 default_num_partitions = 3;
}
message GetAutoTopicCreationRequest {
  string namespace = 1;
  AutoTopicCreationTopicType topic_type = 2;
}
message GetAutoTopicCreationResponse {
  google.rpc.Status status = 1;
  AutoTopicCreation auto_topic_creation = 2;
  optional AutoTopicCreationOverride auto_topic_creation_override = 3;
}
message SetAutoTopicCreationRequest {
  string namespace = 1;
  AutoTopicCreation auto_topic_creation = 2;
  optional AutoTopicCreationOverride auto_topic_creation_override = 3;
}
message SetAutoTopicCreationResponse {
  google.rpc.Status status = 1;
}
message RemoveAutoTopicCreationRequest {
  string namespace = 1;
}
message RemoveAutoTopicCreationResponse {
  google.rpc.Status status = 1;
}

enum BacklogQuotaRetentionPolicy {
  BACKLOG_QUOTA_RETENTION_POLICY_UNSPECIFIED = 0;
  BACKLOG_QUOTA_RETENTION_POLICY_PRODUCER_REQUEST_HOLD = 1;
  BACKLOG_QUOTA_RETENTION_POLICY_PRODUCER_EXCEPTION = 2;
  BACKLOG_QUOTA_RETENTION_POLICY_CONSUMER_BACKLOG_EVICTION = 3;
}
enum BacklogQuotaType {
  BACKLOG_QUOTA_TYPE_UNSPECIFIED = 0;
  BACKLOG_QUOTA_TYPE_DESTINATION_STORAGE = 1;
  BACKLOG_QUOTA_TYPE_MESSAGE_AGE = 2;
}
message DestinationStorageBacklogQuota {
  int64 limit_size = 1;
  optional BacklogQuotaRetentionPolicy retention_policy = 2;
}
message MessageAgeBacklogQuota {
  int32 limit_time = 1;
  optional BacklogQuotaRetentionPolicy retention_policy = 2;
}
message GetBacklogQuotasRequest {
  string namespace = 1;
}
message GetBacklogQuotasResponse {
  google.rpc.Status status = 1;
  optional DestinationStorageBacklogQuota destination_storage = 2;
  optional MessageAgeBacklogQuota message_age = 3;
}
message SetBacklogQuotasRequest {
  string namespace = 1;
  optional DestinationStorageBacklogQuota destination_storage = 2;
  optional MessageAgeBacklogQuota message_age = 3;
}
message SetBacklogQuotasResponse {
  google.rpc.Status status = 1;
}
message RemoveBacklogQuotaRequest {
  string namespace = 1;
  BacklogQuotaType backlog_quota_type = 2;
}
message RemoveBacklogQuotaResponse {
  google.rpc.Status status = 1;
}

message BookieAffinityGroupData {
  repeated string primary = 1;
  repeated string secondary = 2;
}
message GetBookieAffinityGroupRequest {
  string namespace = 1;
}
message GetBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
  BookieAffinityGroupData group_data = 2;
}
message SetBookieAffinityGroupRequest {
  string namespace = 1;
  BookieAffinityGroupData group_data = 2;
}
message SetBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message RemoveBookieAffinityGroupRequest {
  string namespace = 1;
}
message RemoveBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
}

message GetCompactionThresholdRequest {
  string namespace = 1;
}
message CompactionThresholdDisabled {
}
message CompactionThresholdEnabled {
  int64 threshold = 1;
}
message GetCompactionThresholdResponse {
  google.rpc.Status status = 1;
  oneof threshold {
    CompactionThresholdDisabled disabled = 2;
    CompactionThresholdEnabled enabled = 3;
  }
}
message SetCompactionThresholdRequest {
  string namespace = 1;
  int64 threshold = 2;
}
message SetCompactionThresholdResponse {
  google.rpc.Status status = 1;
}
message RemoveCompactionThresholdRequest {
  string namespace = 1;
}
message RemoveCompactionThresholdResponse {
  google.rpc.Status status = 1;
}

message GetDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
}
message DeduplicationSnapshotIntervalDisabled {
}
message DeduplicationSnapshotIntervalEnabled {
  int32 interval = 1;
}
message GetDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
  oneof interval {
    DeduplicationSnapshotIntervalDisabled disabled = 2;
    DeduplicationSnapshotIntervalEnabled enabled = 3;
  }
}
message SetDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
  int32 interval = 2;
}
message SetDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
}
message RemoveDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
}
message RemoveDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
}

message GetDeduplicationRequest {
  string namespace = 1;
}
message DeduplicationUnspecified {
}
message DeduplicationSpecified {
  bool enabled = 1;
}
message GetDeduplicationResponse {
  google.rpc.Status status = 1;
  oneof deduplication {
    DeduplicationUnspecified unspecified = 2;
    DeduplicationSpecified specified = 3;
  }
}
message SetDeduplicationRequest {
  string namespace = 1;
  bool enabled = 2;
}
message SetDeduplicationResponse {
  google.rpc.Status status = 1;
}
message RemoveDeduplicationRequest {
  string namespace = 1;
}
message RemoveDeduplicationResponse {
  google.rpc.Status status = 1;
}

message GetDelayedDeliveryRequest {
  string namespace = 1;
}
message DelayedDeliveryUnspecified {
}
message DelayedDeliverySpecified {
  bool enabled = 1;
  int64 tick_time_ms = 2;
}
message GetDelayedDeliveryResponse {
  google.rpc.Status status = 1;
  oneof delayed_delivery {
    DelayedDeliveryUnspecified unspecified = 2;
    DelayedDeliverySpecified specified = 3;
  }
}
message SetDelayedDeliveryRequest {
  string namespace = 1;
  bool enabled = 2;
  int64 tick_time_ms = 3;
}
message SetDelayedDeliveryResponse {
  google.rpc.Status status = 1;
}
message RemoveDelayedDeliveryRequest {
  string namespace = 1;
}
message RemoveDelayedDeliveryResponse {
  google.rpc.Status status = 1;
}

message GetDispatchRateRequest {
  string namespace = 1;
}
message DispatchRateUnspecified {}
message DispatchRateSpecified {
  int32 rate_in_msg = 1;
  int64 rate_in_byte = 2;
  int32 period_in_second = 3;
  bool is_relative_to_publish_rate = 4;
}
message GetDispatchRateResponse {
  google.rpc.Status status = 1;
  oneof dispatch_rate {
    DispatchRateUnspecified unspecified = 2;
    DispatchRateSpecified specified = 3;
  }
}
message SetDispatchRateRequest {
  string namespace = 1;
  int32 rate_in_msg = 2;
  int64 rate_in_byte = 3;
  int32 period_in_second = 4;
  bool is_relative_to_publish_rate = 5;
}
message SetDispatchRateResponse {
  google.rpc.Status status = 1;
}
message RemoveDispatchRateRequest {
  string namespace = 1;
}
message RemoveDispatchRateResponse {
  google.rpc.Status status = 1;
}

message GetEncryptionRequiredRequest {
  string namespace = 1;
}
message GetEncryptionRequiredResponse {
  google.rpc.Status status = 1;
  bool encryption_required = 2;
}
message SetEncryptionRequiredRequest {
  string namespace = 1;
  bool encryption_required = 2;
}
message SetEncryptionRequiredResponse {
  google.rpc.Status status = 1;
}

message GetInactiveTopicPoliciesRequest {
  string namespace = 1;
}
enum InactiveTopicPoliciesDeleteMode {
  INACTIVE_TOPIC_POLICIES_DELETE_MODE_UNSPECIFIED = 0;
  INACTIVE_TOPIC_POLICIES_DELETE_MODE_DELETE_WHEN_NO_SUBSCRIPTIONS = 1;
  INACTIVE_TOPIC_POLICIES_DELETE_MODE_DELETE_WHEN_SUBSCRIPTIONS_CAUGHT_UP = 2;
}
message InactiveTopicPoliciesUnspecified {}
message InactiveTopicPoliciesSpecified {
  InactiveTopicPoliciesDeleteMode inactive_topic_delete_mode = 1;
  int32 max_inactive_duration_seconds = 2;
  bool delete_while_inactive = 3;
}
message GetInactiveTopicPoliciesResponse {
  google.rpc.Status status = 1;
  oneof inactive_topic_policies {
    InactiveTopicPoliciesUnspecified unspecified = 2;
    InactiveTopicPoliciesSpecified specified = 3;
  }
}
message SetInactiveTopicPoliciesRequest {
  string namespace = 1;
  InactiveTopicPoliciesDeleteMode inactive_topic_delete_mode = 2;
  int32 max_inactive_duration_seconds = 3;
  bool delete_while_inactive = 4;
}
message SetInactiveTopicPoliciesResponse {
  google.rpc.Status status = 1;
}
message RemoveInactiveTopicPoliciesRequest {
  string namespace = 1;
}
message RemoveInactiveTopicPoliciesResponse {
  google.rpc.Status status = 1;
}

message GetMaxConsumersPerSubscriptionRequest {
  string namespace = 1;
}
message MaxConsumersPerSubscriptionUnspecified {}
message MaxConsumersPerSubscriptionSpecified {
  int32 max_consumers_per_subscription = 1;
}
message GetMaxConsumersPerSubscriptionResponse {
  google.rpc.Status status = 1;
  oneof max_consumers_per_subscription {
    MaxConsumersPerSubscriptionUnspecified unspecified = 2;
    MaxConsumersPerSubscriptionSpecified specified = 3;
  }
}
message SetMaxConsumersPerSubscriptionRequest {
  string namespace = 1;
  int32 max_consumers_per_subscription = 2;
}
message SetMaxConsumersPerSubscriptionResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxConsumersPerSubscriptionRequest {
  string namespace = 1;
}
message RemoveMaxConsumersPerSubscriptionResponse {
  google.rpc.Status status = 1;
}

message GetMaxConsumersPerTopicRequest {
  string namespace = 1;
}
message MaxConsumersPerTopicUnspecified {}
message MaxConsumersPerTopicSpecified {
  int32 max_consumers_per_topic = 1;
}
message GetMaxConsumersPerTopicResponse {
  google.rpc.Status status = 1;
  oneof max_consumers_per_topic {
    MaxConsumersPerTopicUnspecified unspecified = 2;
    MaxConsumersPerTopicSpecified specified = 3;
  }
}
message SetMaxConsumersPerTopicRequest {
  string namespace = 1;
  int32 max_consumers_per_topic = 2;
}
message SetMaxConsumersPerTopicResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxConsumersPerTopicRequest {
  string namespace = 1;
}
message RemoveMaxConsumersPerTopicResponse {
  google.rpc.Status status = 1;
}

message GetMaxProducersPerTopicRequest {
  string namespace = 1;
}
message MaxProducersPerTopicUnspecified {}
message MaxProducersPerTopicSpecified {
  int32 max_producers_per_topic = 1;
}
message GetMaxProducersPerTopicResponse {
  google.rpc.Status status = 1;
  oneof max_producers_per_topic {
    MaxProducersPerTopicUnspecified unspecified = 2;
    MaxProducersPerTopicSpecified specified = 3;
  }
}
message SetMaxProducersPerTopicRequest {
  string namespace = 1;
  int32 max_producers_per_topic = 2;
}
message SetMaxProducersPerTopicResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxProducersPerTopicRequest {
  string namespace = 1;
}
message RemoveMaxProducersPerTopicResponse {
  google.rpc.Status status = 1;
}

message GetMaxSubscriptionsPerTopicRequest {
  string namespace = 1;
}
message MaxSubscriptionsPerTopicUnspecified {}
message MaxSubscriptionsPerTopicSpecified {
  int32 max_subscriptions_per_topic = 1;
}
message GetMaxSubscriptionsPerTopicResponse {
  google.rpc.Status status = 1;
  oneof max_subscriptions_per_topic {
    MaxSubscriptionsPerTopicUnspecified unspecified = 2;
    MaxSubscriptionsPerTopicSpecified specified = 3;
  }
}
message SetMaxSubscriptionsPerTopicRequest {
  string namespace = 1;
  int32 max_subscriptions_per_topic = 2;
}
message SetMaxSubscriptionsPerTopicResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxSubscriptionsPerTopicRequest {
  string namespace = 1;
}
message RemoveMaxSubscriptionsPerTopicResponse {
  google.rpc.Status status = 1;
}

message GetMaxTopicsPerNamespaceRequest {
  string namespace = 1;
}
message MaxTopicsPerNamespaceUnspecified {}
message MaxTopicsPerNamespaceSpecified {
  int32 max_topics_per_namespace = 1;
}
message GetMaxTopicsPerNamespaceResponse {
  google.rpc.Status status = 1;
  oneof max_topics_per_namespace {
    MaxTopicsPerNamespaceUnspecified unspecified = 2;
    MaxTopicsPerNamespaceSpecified specified = 3;
  }
}
message SetMaxTopicsPerNamespaceRequest {
  string namespace = 1;
  int32 max_topics_per_namespace = 2;
}
message SetMaxTopicsPerNamespaceResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxTopicsPerNamespaceRequest {
  string namespace = 1;
}
message RemoveMaxTopicsPerNamespaceResponse {
  google.rpc.Status status = 1;
}

message GetMaxUnackedMessagesPerConsumerRequest {
  string namespace = 1;
}
message MaxUnackedMessagesPerConsumerUnspecified {}
message MaxUnackedMessagesPerConsumerSpecified {
  int32 max_unacked_messages_per_consumer = 1;
}
message GetMaxUnackedMessagesPerConsumerResponse {
  google.rpc.Status status = 1;
  oneof max_unacked_messages_per_consumer {
    MaxUnackedMessagesPerConsumerUnspecified unspecified = 2;
    MaxUnackedMessagesPerConsumerSpecified specified = 3;
  }
}
message SetMaxUnackedMessagesPerConsumerRequest {
  string namespace = 1;
  int32 max_unacked_messages_per_consumer = 2;
}
message SetMaxUnackedMessagesPerConsumerResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxUnackedMessagesPerConsumerRequest {
  string namespace = 1;
}
message RemoveMaxUnackedMessagesPerConsumerResponse {
  google.rpc.Status status = 1;
}

message GetMaxUnackedMessagesPerSubscriptionRequest {
  string namespace = 1;
}
message MaxUnackedMessagesPerSubscriptionUnspecified {}
message MaxUnackedMessagesPerSubscriptionSpecified {
  int32 max_unacked_messages_per_subscription = 1;
}
message GetMaxUnackedMessagesPerSubscriptionResponse {
  google.rpc.Status status = 1;
  oneof max_unacked_messages_per_subscription {
    MaxUnackedMessagesPerSubscriptionUnspecified unspecified = 2;
    MaxUnackedMessagesPerSubscriptionSpecified specified = 3;
  }
}
message SetMaxUnackedMessagesPerSubscriptionRequest {
  string namespace = 1;
  int32 max_unacked_messages_per_subscription = 2;
}
message SetMaxUnackedMessagesPerSubscriptionResponse {
  google.rpc.Status status = 1;
}
message RemoveMaxUnackedMessagesPerSubscriptionRequest {
  string namespace = 1;
}
message RemoveMaxUnackedMessagesPerSubscriptionResponse {
  google.rpc.Status status = 1;
}

message GetMessageTtlRequest {
  string namespace = 1;
}
message MessageTtlUnspecified {}
message MessageTtlSpecified {
  int32 message_ttl_seconds = 1;
}
message GetMessageTtlResponse {
  google.rpc.Status status = 1;
  oneof message_ttl {
    MessageTtlUnspecified unspecified = 2;
    MessageTtlSpecified specified = 3;
  }
}
message SetMessageTtlRequest {
  string namespace = 1;
  int32 message_ttl_seconds = 2;
}
message SetMessageTtlResponse {
  google.rpc.Status status = 1;
}
message RemoveMessageTtlRequest {
  string namespace = 1;
}
message RemoveMessageTtlResponse {
  google.rpc.Status status = 1;
}

message GetOffloadDeletionLagRequest {
  string namespace = 1;
}
message OffloadDeletionLagUnspecified {}
message OffloadDeletionLagSpecified {
  int64 offload_deletion_lag_ms = 1;
}
message GetOffloadDeletionLagResponse {
  google.rpc.Status status = 1;
  oneof offload_deletion_lag {
    OffloadDeletionLagUnspecified unspecified = 2;
    OffloadDeletionLagSpecified specified = 3;
  }
}
message SetOffloadDeletionLagRequest {
  string namespace = 1;
  int32 offload_deletion_lag_ms = 2;
}
message SetOffloadDeletionLagResponse {
  google.rpc.Status status = 1;
}
message RemoveOffloadDeletionLagRequest {
  string namespace = 1;
}
message RemoveOffloadDeletionLagResponse {
  google.rpc.Status status = 1;
}

message GetOffloadThresholdRequest {
  string namespace = 1;
}
message OffloadThresholdSpecified {
  int64 offload_threshold_bytes = 1;
}
message GetOffloadThresholdResponse {
  google.rpc.Status status = 1;
  oneof offload_threshold {
    OffloadThresholdSpecified specified = 3;
  }
}
message SetOffloadThresholdRequest {
  string namespace = 1;
  int64 offload_threshold_bytes = 2;
}
message SetOffloadThresholdResponse {
  google.rpc.Status status = 1;
}

message GetPersistenceRequest {
  string namespace = 1;
}
message PersistenceUnspecified {}
message PersistenceSpecified {
  int32 bookkeeper_ensemble = 1;
  int32 bookkeeper_write_quorum = 2;
  int32 bookkeeper_ack_quorum = 3;
  double managed_ledger_max_mark_delete_rate = 4;
}
message GetPersistenceResponse {
  google.rpc.Status status = 1;
  oneof persistence {
    PersistenceUnspecified unspecified = 3;
    PersistenceSpecified specified = 4;
  }
}
message SetPersistenceRequest {
  string namespace = 1;
  int32 bookkeeper_ensemble = 2;
  int32 bookkeeper_write_quorum = 3;
  int32 bookkeeper_ack_quorum = 4;
  double managed_ledger_max_mark_delete_rate = 5;
}
message SetPersistenceResponse {
  google.rpc.Status status = 1;
}
message RemovePersistenceRequest {
  string namespace = 1;
}
message RemovePersistenceResponse {
  google.rpc.Status status = 1;
}

message GetReplicationClustersRequest {
  string namespace = 1;
}
message GetReplicationClustersResponse {
  google.rpc.Status status = 1;
  repeated string replication_clusters = 2;
}
message SetReplicationClustersRequest {
  string namespace = 1;
  repeated string replication_clusters = 2;
}
message SetReplicationClustersResponse {
  google.rpc.Status status = 1;
}

message GetReplicatorDispatchRateRequest {
  string namespace = 1;
}
message ReplicatorDispatchRateUnspecified {}
message ReplicatorDispatchRateSpecified {
  int32 rate_in_msg = 1;
  int64 rate_in_byte = 2;
  bool is_relative_to_publish_rate = 3;
  int32 period_in_second = 4;
}
message GetReplicatorDispatchRateResponse {
  google.rpc.Status status = 1;
  oneof replicator_dispatch_rate {
    ReplicatorDispatchRateUnspecified unspecified = 3;
    ReplicatorDispatchRateSpecified specified = 4;
  }
}
message SetReplicatorDispatchRateRequest {
  string namespace = 1;
  int32 rate_in_msg = 2;
  int64 rate_in_byte = 3;
  bool is_relative_to_publish_rate = 4;
  int32 period_in_second = 5;
}
message SetReplicatorDispatchRateResponse {
  google.rpc.Status status = 1;
}
message RemoveReplicatorDispatchRateRequest {
  string namespace = 1;
}
message RemoveReplicatorDispatchRateResponse {
  google.rpc.Status status = 1;
}

message GetSubscriptionDispatchRateRequest {
  string namespace = 1;
}
message SubscriptionDispatchRateUnspecified {}
message SubscriptionDispatchRateSpecified {
  int32 rate_in_msg = 1;
  int64 rate_in_byte = 2;
  bool is_relative_to_publish_rate = 3;
  int32 period_in_second = 4;
}
message GetSubscriptionDispatchRateResponse {
  google.rpc.Status status = 1;
  oneof subscription_dispatch_rate {
    SubscriptionDispatchRateUnspecified unspecified = 3;
    SubscriptionDispatchRateSpecified specified = 4;
  }
}
message SetSubscriptionDispatchRateRequest {
  string namespace = 1;
  int32 rate_in_msg = 2;
  int64 rate_in_byte = 3;
  bool is_relative_to_publish_rate = 4;
  int32 period_in_second = 5;
}
message SetSubscriptionDispatchRateResponse {
  google.rpc.Status status = 1;
}
message RemoveSubscriptionDispatchRateRequest {
  string namespace = 1;
}
message RemoveSubscriptionDispatchRateResponse {
  google.rpc.Status status = 1;
}

message GetRetentionRequest {
  string namespace = 1;
}
message RetentionUnspecified {}
message RetentionSpecified {
  int32 retention_time_in_minutes = 1;
  int32 retention_size_in_mb = 2;
}
message GetRetentionResponse {
  google.rpc.Status status = 1;
  oneof retention {
    RetentionUnspecified unspecified = 3;
    RetentionSpecified specified = 4;
  }
}
message SetRetentionRequest {
  string namespace = 1;
  int32 retention_time_in_minutes = 2;
  int32 retention_size_in_mb = 3;
}
message SetRetentionResponse {
  google.rpc.Status status = 1;
}
message RemoveRetentionRequest {
  string namespace = 1;
}
message RemoveRetentionResponse {
  google.rpc.Status status = 1;
}

message GetSubscribeRateRequest {
  string namespace = 1;
}
message SubscribeRateUnspecified {}
message SubscribeRateSpecified {
  int32 subscribe_throttling_rate_per_consumer = 1;
  int32 rate_period_in_seconds = 2;
}
message GetSubscribeRateResponse {
  google.rpc.Status status = 1;
  oneof subscribe_rate {
    SubscribeRateUnspecified unspecified = 3;
    SubscribeRateSpecified specified = 4;
  }
}
message SetSubscribeRateRequest {
  string namespace = 1;
  int32 subscribe_throttling_rate_per_consumer = 2;
  int32 rate_period_in_seconds = 3;
}
message SetSubscribeRateResponse {
  google.rpc.Status status = 1;
}
message RemoveSubscribeRateRequest {
  string namespace = 1;
}
message RemoveSubscribeRateResponse {
  google.rpc.Status status = 1;
}

message GetSubscriptionAuthModeRequest {
  string namespace = 1;
}
enum SubscriptionAuthMode {
  SUBSCRIPTION_AUTH_MODE_UNSPECIFIED = 0;
  SUBSCRIPTION_AUTH_MODE_NONE = 1;
  SUBSCRIPTION_AUTH_MODE_PREFIX = 2;
}

message GetSubscriptionAuthModeResponse {
  google.rpc.Status status = 1;
  SubscriptionAuthMode subscription_auth_mode = 2;
}
message SetSubscriptionAuthModeRequest {
  string namespace = 1;
  SubscriptionAuthMode subscription_auth_mode = 2;
}
message SetSubscriptionAuthModeResponse {
  google.rpc.Status status = 1;
}

message GetSubscriptionExpirationTimeRequest {
  string namespace = 1;
}
message SubscriptionExpirationTimeUnspecified {}
message SubscriptionExpirationTimeSpecified {
  int32 subscription_expiration_time_in_minutes = 1;
}
message GetSubscriptionExpirationTimeResponse {
  google.rpc.Status status = 1;
  oneof subscription_expiration_time {
    SubscriptionExpirationTimeUnspecified unspecified = 3;
    SubscriptionExpirationTimeSpecified specified = 4;
  }
}
message SetSubscriptionExpirationTimeRequest {
  string namespace = 1;
  int32 subscription_expiration_time_in_minutes = 2;
}
message SetSubscriptionExpirationTimeResponse {
  google.rpc.Status status = 1;
}
message RemoveSubscriptionExpirationTimeRequest {
  string namespace = 1;
}
message RemoveSubscriptionExpirationTimeResponse {
  google.rpc.Status status = 1;
}

service NamespaceService {
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse);

  rpc GetSchemaCompatibilityStrategy(GetSchemaCompatibilityStrategyRequest) returns (GetSchemaCompatibilityStrategyResponse);
  rpc SetSchemaCompatibilityStrategy(SetSchemaCompatibilityStrategyRequest) returns (SetSchemaCompatibilityStrategyResponse);

  rpc GetIsAllowAutoUpdateSchema(GetIsAllowAutoUpdateSchemaRequest) returns (GetIsAllowAutoUpdateSchemaResponse);
  rpc SetIsAllowAutoUpdateSchema(SetIsAllowAutoUpdateSchemaRequest) returns (SetIsAllowAutoUpdateSchemaResponse);

  rpc GetSchemaValidationEnforce(GetSchemaValidationEnforceRequest) returns (GetSchemaValidationEnforceResponse);
  rpc SetSchemaValidationEnforce(SetSchemaValidationEnforceRequest) returns (SetSchemaValidationEnforceResponse);

  rpc GetNamespaceAntiAffinityGroup(GetNamespaceAntiAffinityGroupRequest) returns (GetNamespaceAntiAffinityGroupResponse);
  rpc SetNamespaceAntiAffinityGroup(SetNamespaceAntiAffinityGroupRequest) returns (SetNamespaceAntiAffinityGroupResponse);
  rpc RemoveNamespaceAntiAffinityGroup(RemoveNamespaceAntiAffinityGroupRequest) returns (RemoveNamespaceAntiAffinityGroupResponse);
  rpc GetAntiAffinityNamespaces(GetAntiAffinityNamespacesRequest) returns (GetAntiAffinityNamespacesResponse);

  rpc GetAutoSubscriptionCreation(GetAutoSubscriptionCreationRequest) returns (GetAutoSubscriptionCreationResponse);
  rpc SetAutoSubscriptionCreation(SetAutoSubscriptionCreationRequest) returns (SetAutoSubscriptionCreationResponse);
  rpc RemoveAutoSubscriptionCreation(RemoveAutoSubscriptionCreationRequest) returns (RemoveAutoSubscriptionCreationResponse);

  rpc GetAutoTopicCreation(GetAutoTopicCreationRequest) returns (GetAutoTopicCreationResponse);
  rpc SetAutoTopicCreation(SetAutoTopicCreationRequest) returns (SetAutoTopicCreationResponse);
  rpc RemoveAutoTopicCreation(RemoveAutoTopicCreationRequest) returns (RemoveAutoTopicCreationResponse);

  rpc GetBacklogQuotas(GetBacklogQuotasRequest) returns (GetBacklogQuotasResponse);
  rpc SetBacklogQuotas(SetBacklogQuotasRequest) returns (SetBacklogQuotasResponse);
  rpc RemoveBacklogQuota(RemoveBacklogQuotaRequest) returns (RemoveBacklogQuotaResponse);

  rpc GetBookieAffinityGroup(GetBookieAffinityGroupRequest) returns (GetBookieAffinityGroupResponse);
  rpc SetBookieAffinityGroup(SetBookieAffinityGroupRequest) returns (SetBookieAffinityGroupResponse);
  rpc RemoveBookieAffinityGroup(RemoveBookieAffinityGroupRequest) returns (RemoveBookieAffinityGroupResponse);

  rpc GetCompactionThreshold(GetCompactionThresholdRequest) returns (GetCompactionThresholdResponse);
  rpc SetCompactionThreshold(SetCompactionThresholdRequest) returns (SetCompactionThresholdResponse);
  rpc RemoveCompactionThreshold(RemoveCompactionThresholdRequest) returns (RemoveCompactionThresholdResponse);

  rpc GetDeduplicationSnapshotInterval(GetDeduplicationSnapshotIntervalRequest) returns (GetDeduplicationSnapshotIntervalResponse);
  rpc SetDeduplicationSnapshotInterval(SetDeduplicationSnapshotIntervalRequest) returns (SetDeduplicationSnapshotIntervalResponse);
  rpc RemoveDeduplicationSnapshotInterval(RemoveDeduplicationSnapshotIntervalRequest) returns (RemoveDeduplicationSnapshotIntervalResponse);

  rpc GetDeduplication(GetDeduplicationRequest) returns (GetDeduplicationResponse);
  rpc SetDeduplication(SetDeduplicationRequest) returns (SetDeduplicationResponse);
  rpc RemoveDeduplication(RemoveDeduplicationRequest) returns (RemoveDeduplicationResponse);

  rpc GetDelayedDelivery(GetDelayedDeliveryRequest) returns (GetDelayedDeliveryResponse);
  rpc SetDelayedDelivery(SetDelayedDeliveryRequest) returns (SetDelayedDeliveryResponse);
  rpc RemoveDelayedDelivery(RemoveDelayedDeliveryRequest) returns (RemoveDelayedDeliveryResponse);

  rpc GetDispatchRate(GetDispatchRateRequest) returns (GetDispatchRateResponse);
  rpc SetDispatchRate(SetDispatchRateRequest) returns (SetDispatchRateResponse);
  rpc RemoveDispatchRate(RemoveDispatchRateRequest) returns (RemoveDispatchRateResponse);

  rpc GetEncryptionRequired(GetEncryptionRequiredRequest) returns (GetEncryptionRequiredResponse);
  rpc SetEncryptionRequired(SetEncryptionRequiredRequest) returns (SetEncryptionRequiredResponse);

  rpc GetInactiveTopicPolicies(GetInactiveTopicPoliciesRequest) returns (GetInactiveTopicPoliciesResponse);
  rpc SetInactiveTopicPolicies(SetInactiveTopicPoliciesRequest) returns (SetInactiveTopicPoliciesResponse);
  rpc RemoveInactiveTopicPolicies(RemoveInactiveTopicPoliciesRequest) returns (RemoveInactiveTopicPoliciesResponse);

  rpc GetMaxConsumersPerSubscription(GetMaxConsumersPerSubscriptionRequest) returns (GetMaxConsumersPerSubscriptionResponse);
  rpc SetMaxConsumersPerSubscription(SetMaxConsumersPerSubscriptionRequest) returns (SetMaxConsumersPerSubscriptionResponse);
  rpc RemoveMaxConsumersPerSubscription(RemoveMaxConsumersPerSubscriptionRequest) returns (RemoveMaxConsumersPerSubscriptionResponse);

  rpc GetMaxConsumersPerTopic(GetMaxConsumersPerTopicRequest) returns (GetMaxConsumersPerTopicResponse);
  rpc SetMaxConsumersPerTopic(SetMaxConsumersPerTopicRequest) returns (SetMaxConsumersPerTopicResponse);
  rpc RemoveMaxConsumersPerTopic(RemoveMaxConsumersPerTopicRequest) returns (RemoveMaxConsumersPerTopicResponse);

  rpc GetMaxProducersPerTopic(GetMaxProducersPerTopicRequest) returns (GetMaxProducersPerTopicResponse);
  rpc SetMaxProducersPerTopic(SetMaxProducersPerTopicRequest) returns (SetMaxProducersPerTopicResponse);
  rpc RemoveMaxProducersPerTopic(RemoveMaxProducersPerTopicRequest) returns (RemoveMaxProducersPerTopicResponse);

  rpc GetMaxSubscriptionsPerTopic(GetMaxSubscriptionsPerTopicRequest) returns (GetMaxSubscriptionsPerTopicResponse);
  rpc SetMaxSubscriptionsPerTopic(SetMaxSubscriptionsPerTopicRequest) returns (SetMaxSubscriptionsPerTopicResponse);
  rpc RemoveMaxSubscriptionsPerTopic(RemoveMaxSubscriptionsPerTopicRequest) returns (RemoveMaxSubscriptionsPerTopicResponse);

  rpc GetMaxTopicsPerNamespace(GetMaxTopicsPerNamespaceRequest) returns (GetMaxTopicsPerNamespaceResponse);
  rpc SetMaxTopicsPerNamespace(SetMaxTopicsPerNamespaceRequest) returns (SetMaxTopicsPerNamespaceResponse);
  rpc RemoveMaxTopicsPerNamespace(RemoveMaxTopicsPerNamespaceRequest) returns (RemoveMaxTopicsPerNamespaceResponse);

  rpc GetMaxUnackedMessagesPerConsumer(GetMaxUnackedMessagesPerConsumerRequest) returns (GetMaxUnackedMessagesPerConsumerResponse);
  rpc SetMaxUnackedMessagesPerConsumer(SetMaxUnackedMessagesPerConsumerRequest) returns (SetMaxUnackedMessagesPerConsumerResponse);
  rpc RemoveMaxUnackedMessagesPerConsumer(RemoveMaxUnackedMessagesPerConsumerRequest) returns (RemoveMaxUnackedMessagesPerConsumerResponse);

  rpc GetMaxUnackedMessagesPerSubscription(GetMaxUnackedMessagesPerSubscriptionRequest) returns (GetMaxUnackedMessagesPerSubscriptionResponse);
  rpc SetMaxUnackedMessagesPerSubscription(SetMaxUnackedMessagesPerSubscriptionRequest) returns (SetMaxUnackedMessagesPerSubscriptionResponse);
  rpc RemoveMaxUnackedMessagesPerSubscription(RemoveMaxUnackedMessagesPerSubscriptionRequest) returns (RemoveMaxUnackedMessagesPerSubscriptionResponse);

  rpc GetMessageTtl(GetMessageTtlRequest) returns (GetMessageTtlResponse);
  rpc SetMessageTtl(SetMessageTtlRequest) returns (SetMessageTtlResponse);
  rpc RemoveMessageTtl(RemoveMessageTtlRequest) returns (RemoveMessageTtlResponse);

  rpc GetOffloadDeletionLag(GetOffloadDeletionLagRequest) returns (GetOffloadDeletionLagResponse);
  rpc SetOffloadDeletionLag(SetOffloadDeletionLagRequest) returns (SetOffloadDeletionLagResponse);
  rpc RemoveOffloadDeletionLag(RemoveOffloadDeletionLagRequest) returns (RemoveOffloadDeletionLagResponse);

  rpc GetOffloadThreshold(GetOffloadThresholdRequest) returns (GetOffloadThresholdResponse);
  rpc SetOffloadThreshold(SetOffloadThresholdRequest) returns (SetOffloadThresholdResponse);

  rpc GetPersistence(GetPersistenceRequest) returns (GetPersistenceResponse);
  rpc SetPersistence(SetPersistenceRequest) returns (SetPersistenceResponse);
  rpc RemovePersistence(RemovePersistenceRequest) returns (RemovePersistenceResponse);

  rpc GetReplicationClusters(GetReplicationClustersRequest) returns (GetReplicationClustersResponse);
  rpc SetReplicationClusters(SetReplicationClustersRequest) returns (SetReplicationClustersResponse);

  rpc GetReplicatorDispatchRate(GetReplicatorDispatchRateRequest) returns (GetReplicatorDispatchRateResponse);
  rpc SetReplicatorDispatchRate(SetReplicatorDispatchRateRequest) returns (SetReplicatorDispatchRateResponse);
  rpc RemoveReplicatorDispatchRate(RemoveReplicatorDispatchRateRequest) returns (RemoveReplicatorDispatchRateResponse);

  rpc GetSubscriptionDispatchRate(GetSubscriptionDispatchRateRequest) returns (GetSubscriptionDispatchRateResponse);
  rpc SetSubscriptionDispatchRate(SetSubscriptionDispatchRateRequest) returns (SetSubscriptionDispatchRateResponse);
  rpc RemoveSubscriptionDispatchRate(RemoveSubscriptionDispatchRateRequest) returns (RemoveSubscriptionDispatchRateResponse);

  rpc GetRetention(GetRetentionRequest) returns (GetRetentionResponse);
  rpc SetRetention(SetRetentionRequest) returns (SetRetentionResponse);
  rpc RemoveRetention(RemoveRetentionRequest) returns (RemoveRetentionResponse);

  rpc GetSubscribeRate(GetSubscribeRateRequest) returns (GetSubscribeRateResponse);
  rpc SetSubscribeRate(SetSubscribeRateRequest) returns (SetSubscribeRateResponse);
  rpc RemoveSubscribeRate(RemoveSubscribeRateRequest) returns (RemoveSubscribeRateResponse);

  rpc GetSubscriptionAuthMode(GetSubscriptionAuthModeRequest) returns (GetSubscriptionAuthModeResponse);
  rpc SetSubscriptionAuthMode(SetSubscriptionAuthModeRequest) returns (SetSubscriptionAuthModeResponse);

  rpc GetSubscriptionExpirationTime(GetSubscriptionExpirationTimeRequest) returns (GetSubscriptionExpirationTimeResponse);
  rpc SetSubscriptionExpirationTime(SetSubscriptionExpirationTimeRequest) returns (SetSubscriptionExpirationTimeResponse);
  rpc RemoveSubscriptionExpirationTime(RemoveSubscriptionExpirationTimeRequest) returns (RemoveSubscriptionExpirationTimeResponse);
}
