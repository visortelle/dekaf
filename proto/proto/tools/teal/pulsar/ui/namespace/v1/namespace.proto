syntax = "proto3";

package tools.teal.pulsar.ui.namespace.v1;

import "google/rpc/status.proto";

message CreateNamespaceRequest {
  string namespace_name = 1;
  int32 num_bundles = 2;
  repeated string replication_clusters = 3;
  map<string, string> properties = 4;
}

message CreateNamespaceResponse {
  google.rpc.Status status = 1;
}

message DeleteNamespaceRequest {
  string namespace_name = 1;
  bool force = 2;
}

message DeleteNamespaceResponse {
  google.rpc.Status status = 1;
}

message ListNamespacesRequest {
  string tenant = 1;
}
message ListNamespacesResponse {
  google.rpc.Status status = 1;
  repeated string namespaces = 2;
}

message GetTopicsCountRequest {
  repeated string namespaces = 1;
  bool is_include_system_topics = 2;
  bool is_include_persisted_and_non_persisted_topics = 3;
}
message GetTopicsCountResponse {
  google.rpc.Status status = 1;
  map<string, int32> topics_count = 2;
  map<string, int32> topics_count_excluding_partitions = 3;
  map<string, int32> topics_count_persisted = 4;
  map<string, int32> topics_count_non_persisted = 5;
}

enum AuthAction {
  AUTH_ACTION_UNSPECIFIED = 0;
  AUTH_ACTION_PRODUCE = 1;
  AUTH_ACTION_CONSUME = 2;
  AUTH_ACTION_FUNCTIONS = 3;
  AUTH_ACTION_SOURCES = 4;
  AUTH_ACTION_SINKS = 5;
  AUTH_ACTION_PACKAGES = 6;
}
message AuthActions {
  repeated AuthAction auth_actions = 1;
}
message GetPermissionsRequest {
  string namespace = 1;
}
message GetPermissionsResponse {
  google.rpc.Status status = 1;
  map<string, AuthActions> permissions = 2;
}
message GrantPermissionsRequest {
  string namespace = 1;
  string role = 2;
  repeated AuthAction auth_actions = 3;
  bool existence_check = 4;
}
message GrantPermissionsResponse {
  google.rpc.Status status = 1;
}
message RevokePermissionsRequest {
  string namespace = 1;
  string role = 2;
}
message RevokePermissionsResponse {
  google.rpc.Status status = 1;
}

message Roles {
  repeated string roles = 1;
}
message GetPermissionOnSubscriptionRequest {
  string namespace = 1;
}
message GetPermissionOnSubscriptionResponse {
  google.rpc.Status status = 1;
  map<string, Roles> permissions = 2;
  repeated string roles = 3;
}
message GrantPermissionOnSubscriptionRequest {
  string namespace = 1;
  string subscription = 2;
  repeated string roles = 3;
  bool existence_check = 4;
}
message GrantPermissionOnSubscriptionResponse {
  google.rpc.Status status = 1;
}
message RevokePermissionOnSubscriptionRequest {
  string namespace = 1;
  string subscription = 2;
}
message RevokePermissionOnSubscriptionResponse {
  google.rpc.Status status = 1;
}

message GetPropertiesRequest {
  repeated string namespaces = 1;
}
message Properties {
  map<string, string> properties = 1;
}
message GetPropertiesResponse {
  google.rpc.Status status = 1;
  map<string, Properties> properties = 2;
}
message SetPropertiesRequest {
  string namespace = 1;
  map<string, string> properties = 2;
}
message SetPropertiesResponse {
  google.rpc.Status status = 1;
}

message UnloadNamespaceRequest {
  string namespace = 1;
}

message UnloadNamespaceResponse {
  google.rpc.Status status = 1;
}

message ClearBundleBacklogRequest {
  string namespace = 1;
  string bundle = 2;
}

message ClearBundleBacklogResponse {
  google.rpc.Status status = 1;
}

message ClearNamespaceBacklogRequest {
  string namespace = 1;
}

message ClearNamespaceBacklogResponse {
  google.rpc.Status status = 1;
}

message UnloadNamespaceBundleRequest {
  string namespace = 1;
  string bundle = 2;
}

message UnloadNamespaceBundleResponse {
  google.rpc.Status status = 1;
}

message SplitNamespaceBundleRequest {
  string namespace = 1;
  string bundle = 2;
  bool unload_split_bundles = 3;
  string split_algorithm = 4;
}

message SplitNamespaceBundleResponse {
  google.rpc.Status status = 1;
}

message GetBundlesRequest {
  string namespace = 1;
}

message GetBundlesResponse {
  google.rpc.Status status = 1;
  repeated string bundles = 2;
}

service NamespaceService {
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse);
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse);
  rpc GetTopicsCount(GetTopicsCountRequest) returns (GetTopicsCountResponse);

  rpc GetPermissions(GetPermissionsRequest) returns (GetPermissionsResponse);
  rpc GrantPermissions(GrantPermissionsRequest) returns (GrantPermissionsResponse);
  rpc RevokePermissions(RevokePermissionsRequest) returns (RevokePermissionsResponse);

  rpc GetPermissionOnSubscription(GetPermissionOnSubscriptionRequest) returns (GetPermissionOnSubscriptionResponse);
  rpc GrantPermissionOnSubscription(GrantPermissionOnSubscriptionRequest) returns (GrantPermissionOnSubscriptionResponse);
  rpc RevokePermissionOnSubscription(RevokePermissionOnSubscriptionRequest) returns (RevokePermissionOnSubscriptionResponse);

  rpc GetProperties(GetPropertiesRequest) returns (GetPropertiesResponse);
  rpc SetProperties(SetPropertiesRequest) returns (SetPropertiesResponse);

  rpc UnloadNamespaceBundle(UnloadNamespaceBundleRequest) returns (UnloadNamespaceBundleResponse);
  rpc UnloadNamespace(UnloadNamespaceRequest) returns (UnloadNamespaceResponse);
  rpc ClearBundleBacklog(ClearBundleBacklogRequest) returns (ClearBundleBacklogResponse);
  rpc ClearNamespaceBacklog(ClearNamespaceBacklogRequest) returns (ClearNamespaceBacklogResponse);
  rpc SplitNamespaceBundle(SplitNamespaceBundleRequest) returns (SplitNamespaceBundleResponse);
  rpc GetBundles(GetBundlesRequest) returns (GetBundlesResponse);
}
