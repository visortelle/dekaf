syntax = "proto3";

package tools.teal.pulsar.ui.namespace.v1;

import "google/rpc/status.proto";

message CreateNamespaceRequest {
  string namespace_name = 1;
  int32 num_bundles = 2;
  repeated string replication_clusters = 3;
}

message CreateNamespaceResponse {
  google.rpc.Status status = 1;
}

message DeleteNamespaceRequest {
  string namespace_name = 1;
  bool force = 2;
}

message DeleteNamespaceResponse {
  google.rpc.Status status = 1;
}

enum SchemaCompatibilityStrategy {
  SCHEMA_COMPATIBILITY_STRATEGY_UNSPECIFIED = 0;
  SCHEMA_COMPATIBILITY_STRATEGY_UNDEFINED = 100;
  SCHEMA_COMPATIBILITY_STRATEGY_ALWAYS_INCOMPATIBLE = 1;
  SCHEMA_COMPATIBILITY_STRATEGY_ALWAYS_COMPATIBLE = 2;
  SCHEMA_COMPATIBILITY_STRATEGY_BACKWARD = 3;
  SCHEMA_COMPATIBILITY_STRATEGY_FORWARD = 4;
  SCHEMA_COMPATIBILITY_STRATEGY_FULL = 5;
  SCHEMA_COMPATIBILITY_STRATEGY_BACKWARD_TRANSITIVE = 6;
  SCHEMA_COMPATIBILITY_STRATEGY_FORWARD_TRANSITIVE = 7;
  SCHEMA_COMPATIBILITY_STRATEGY_FULL_TRANSITIVE = 8;
}
message GetSchemaCompatibilityStrategyRequest {
  string namespace = 1;
}
message GetSchemaCompatibilityStrategyResponse {
  google.rpc.Status status = 1;
  SchemaCompatibilityStrategy strategy = 2;
}
message SetSchemaCompatibilityStrategyRequest {
  string namespace = 1;
  SchemaCompatibilityStrategy strategy = 2;
}
message SetSchemaCompatibilityStrategyResponse {
  google.rpc.Status status = 1;
}

message GetIsAllowAutoUpdateSchemaRequest {
  string namespace = 1;
}
message GetIsAllowAutoUpdateSchemaResponse {
  google.rpc.Status status = 1;
  bool is_allow_auto_update_schema = 2;
}
message SetIsAllowAutoUpdateSchemaRequest {
  string namespace = 1;
  bool is_allow_auto_update_schema = 2;
}
message SetIsAllowAutoUpdateSchemaResponse {
  google.rpc.Status status = 1;
}

message GetSchemaValidationEnforceRequest {
  string namespace = 1;
}
message GetSchemaValidationEnforceResponse {
  google.rpc.Status status = 1;
  bool schema_validation_enforced = 2;
}
message SetSchemaValidationEnforceRequest {
  string namespace = 1;
  bool schema_validation_enforced = 2;
}
message SetSchemaValidationEnforceResponse {
  google.rpc.Status status = 1;
}

message GetNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
}
message GetNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
  string namespace_anti_affinity_group = 2;
}
message SetNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
  string namespace_anti_affinity_group = 2;
}
message SetNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message RemoveNamespaceAntiAffinityGroupRequest {
  string namespace = 1;
}
message RemoveNamespaceAntiAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message GetAntiAffinityNamespacesRequest {
  string namespace_anti_affinity_group = 1;
  string tenant = 2;
  string cluster = 3;
}
message GetAntiAffinityNamespacesResponse {
  google.rpc.Status status = 1;
  repeated string namespaces = 2;
}

enum AutoSubscriptionCreation {
  AUTO_SUBSCRIPTION_CREATION_UNSPECIFIED = 0;
  AUTO_SUBSCRIPTION_CREATION_ENABLED = 1;
  AUTO_SUBSCRIPTION_CREATION_DISABLED = 2;
  AUTO_SUBSCRIPTION_CREATION_INHERITED_FROM_BROKER_CONFIG = 3;
}
message GetAutoSubscriptionCreationRequest {
  string namespace = 1;
}
message GetAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
  AutoSubscriptionCreation auto_subscription_creation = 2;
}
message SetAutoSubscriptionCreationRequest {
  string namespace = 1;
  AutoSubscriptionCreation auto_subscription_creation = 2;
}
message SetAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
}
message RemoveAutoSubscriptionCreationRequest {
  string namespace = 1;
}
message RemoveAutoSubscriptionCreationResponse {
  google.rpc.Status status = 1;
}

enum AutoTopicCreation {
  AUTO_TOPIC_CREATION_UNSPECIFIED = 0;
  AUTO_TOPIC_CREATION_SPECIFIED = 1;
  AUTO_TOPIC_CREATION_INHERITED_FROM_BROKER_CONFIG = 2;
}
enum AutoTopicCreationTopicType {
  AUTO_TOPIC_CREATION_TOPIC_TYPE_UNSPECIFIED = 0;
  AUTO_TOPIC_CREATION_TOPIC_TYPE_PARTITIONED = 1;
  AUTO_TOPIC_CREATION_TOPIC_TYPE_NON_PARTITIONED = 2;
}
message AutoTopicCreationOverride {
  bool is_allow_topic_creation = 1;
  AutoTopicCreationTopicType topic_type = 2;
  int32 default_num_partitions = 3;
}
message GetAutoTopicCreationRequest {
  string namespace = 1;
  AutoTopicCreationTopicType topic_type = 2;
}
message GetAutoTopicCreationResponse {
  google.rpc.Status status = 1;
  AutoTopicCreation auto_topic_creation = 2;
  optional AutoTopicCreationOverride auto_topic_creation_override = 3;
}
message SetAutoTopicCreationRequest {
  string namespace = 1;
  AutoTopicCreation auto_topic_creation = 2;
  optional AutoTopicCreationOverride auto_topic_creation_override = 3;
}
message SetAutoTopicCreationResponse {
  google.rpc.Status status = 1;
}
message RemoveAutoTopicCreationRequest {
  string namespace = 1;
}
message RemoveAutoTopicCreationResponse {
  google.rpc.Status status = 1;
}

enum BacklogQuotaRetentionPolicy {
  BACKLOG_QUOTA_RETENTION_POLICY_UNSPECIFIED = 0;
  BACKLOG_QUOTA_RETENTION_POLICY_PRODUCER_REQUEST_HOLD = 1;
  BACKLOG_QUOTA_RETENTION_POLICY_PRODUCER_EXCEPTION = 2;
  BACKLOG_QUOTA_RETENTION_POLICY_CONSUMER_BACKLOG_EVICTION = 3;
}
enum BacklogQuotaType {
  BACKLOG_QUOTA_TYPE_UNSPECIFIED = 0;
  BACKLOG_QUOTA_TYPE_DESTINATION_STORAGE = 1;
  BACKLOG_QUOTA_TYPE_MESSAGE_AGE = 2;
}
message DestinationStorageBacklogQuota {
  int64 limit_size = 1;
  optional BacklogQuotaRetentionPolicy retention_policy = 2;
}
message MessageAgeBacklogQuota {
  int32 limit_time = 1;
  optional BacklogQuotaRetentionPolicy retention_policy = 2;
}
message GetBacklogQuotasRequest {
  string namespace = 1;
}
message GetBacklogQuotasResponse {
  google.rpc.Status status = 1;
  optional DestinationStorageBacklogQuota destination_storage = 2;
  optional MessageAgeBacklogQuota message_age = 3;
}
message SetBacklogQuotasRequest {
  string namespace = 1;
  optional DestinationStorageBacklogQuota destination_storage = 2;
  optional MessageAgeBacklogQuota message_age = 3;
}
message SetBacklogQuotasResponse {
  google.rpc.Status status = 1;
}
message RemoveBacklogQuotaRequest {
  string namespace = 1;
  BacklogQuotaType backlog_quota_type = 2;
}
message RemoveBacklogQuotaResponse {
  google.rpc.Status status = 1;
}

message BookieAffinityGroupData {
  repeated string primary = 1;
  repeated string secondary = 2;
}
message GetBookieAffinityGroupRequest {
  string namespace = 1;
}
message GetBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
  BookieAffinityGroupData group_data = 2;
}
message SetBookieAffinityGroupRequest {
  string namespace = 1;
  BookieAffinityGroupData group_data = 2;
}
message SetBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
}
message RemoveBookieAffinityGroupRequest {
  string namespace = 1;
}
message RemoveBookieAffinityGroupResponse {
  google.rpc.Status status = 1;
}

message GetCompactionThresholdRequest {
  string namespace = 1;
}
message CompactionThresholdDisabled {
}
message CompactionThresholdEnabled {
  int64 threshold = 1;
}
message GetCompactionThresholdResponse {
  google.rpc.Status status = 1;
  oneof threshold {
    CompactionThresholdDisabled disabled = 2;
    CompactionThresholdEnabled enabled = 3;
  }
}
message SetCompactionThresholdRequest {
  string namespace = 1;
  int64 threshold = 2;
}
message SetCompactionThresholdResponse {
  google.rpc.Status status = 1;
}
message RemoveCompactionThresholdRequest {
  string namespace = 1;
}
message RemoveCompactionThresholdResponse {
  google.rpc.Status status = 1;
}

message GetDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
}
message DeduplicationSnapshotIntervalDisabled {
}
message DeduplicationSnapshotIntervalEnabled {
  int32 interval = 1;
}
message GetDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
  oneof interval {
    DeduplicationSnapshotIntervalDisabled disabled = 2;
    DeduplicationSnapshotIntervalEnabled enabled = 3;
  }
}
message SetDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
  int32 interval = 2;
}
message SetDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
}
message RemoveDeduplicationSnapshotIntervalRequest {
  string namespace = 1;
}
message RemoveDeduplicationSnapshotIntervalResponse {
  google.rpc.Status status = 1;
}

message GetDeduplicationRequest {
  string namespace = 1;
}
message DeduplicationUnspecified {
}
message DeduplicationSpecified {
  bool enabled = 1;
}
message GetDeduplicationResponse {
  google.rpc.Status status = 1;
  oneof deduplication {
    DeduplicationUnspecified unspecified = 2;
    DeduplicationSpecified specified = 3;
  }
}
message SetDeduplicationRequest {
  string namespace = 1;
  bool enabled = 2;
}
message SetDeduplicationResponse {
  google.rpc.Status status = 1;
}
message RemoveDeduplicationRequest {
  string namespace = 1;
}
message RemoveDeduplicationResponse {
  google.rpc.Status status = 1;
}

message GetDelayedDeliveryRequest {
  string namespace = 1;
}
message DelayedDeliveryUnspecified {
}
message DelayedDeliverySpecified {
  bool enabled = 1;
  int64 tick_time_ms = 2;
}
message GetDelayedDeliveryResponse {
  google.rpc.Status status = 1;
  oneof delayed_delivery {
    DelayedDeliveryUnspecified unspecified = 2;
    DelayedDeliverySpecified specified = 3;
  }
}
message SetDelayedDeliveryRequest {
  string namespace = 1;
  bool enabled = 2;
  int64 tick_time_ms = 3;
}
message SetDelayedDeliveryResponse {
  google.rpc.Status status = 1;
}
message RemoveDelayedDeliveryRequest {
  string namespace = 1;
}
message RemoveDelayedDeliveryResponse {
  google.rpc.Status status = 1;
}

message GetDispatchRateRequest {
  string namespace = 1;
}
message DispatchRateUnspecified {}
message DispatchRateSpecified {
  int32 rate_in_msg = 1;
  int64 rate_in_byte = 2;
  int32 period_in_second = 3;
  bool is_relative_to_publish_rate = 4;
}
message GetDispatchRateResponse {
  google.rpc.Status status = 1;
  oneof dispatch_rate {
    DispatchRateUnspecified unspecified = 2;
    DispatchRateSpecified specified = 3;
  }
}
message SetDispatchRateRequest {
  string namespace = 1;
  int32 rate_in_msg = 2;
  int64 rate_in_byte = 3;
  int32 period_in_second = 4;
  bool is_relative_to_publish_rate = 5;
}
message SetDispatchRateResponse {
  google.rpc.Status status = 1;
}
message RemoveDispatchRateRequest {
  string namespace = 1;
}
message RemoveDispatchRateResponse {
  google.rpc.Status status = 1;
}

message GetEncryptionRequiredRequest {
  string namespace = 1;
}
message GetEncryptionRequiredResponse {
  google.rpc.Status status = 1;
  bool encryption_required = 2;
}
message SetEncryptionRequiredRequest {
  string namespace = 1;
  bool encryption_required = 2;
}
message SetEncryptionRequiredResponse {
  google.rpc.Status status = 1;
}

service NamespaceService {
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse);

  rpc GetSchemaCompatibilityStrategy(GetSchemaCompatibilityStrategyRequest) returns (GetSchemaCompatibilityStrategyResponse);
  rpc SetSchemaCompatibilityStrategy(SetSchemaCompatibilityStrategyRequest) returns (SetSchemaCompatibilityStrategyResponse);

  rpc GetIsAllowAutoUpdateSchema(GetIsAllowAutoUpdateSchemaRequest) returns (GetIsAllowAutoUpdateSchemaResponse);
  rpc SetIsAllowAutoUpdateSchema(SetIsAllowAutoUpdateSchemaRequest) returns (SetIsAllowAutoUpdateSchemaResponse);

  rpc GetSchemaValidationEnforce(GetSchemaValidationEnforceRequest) returns (GetSchemaValidationEnforceResponse);
  rpc SetSchemaValidationEnforce(SetSchemaValidationEnforceRequest) returns (SetSchemaValidationEnforceResponse);

  rpc GetNamespaceAntiAffinityGroup(GetNamespaceAntiAffinityGroupRequest) returns (GetNamespaceAntiAffinityGroupResponse);
  rpc SetNamespaceAntiAffinityGroup(SetNamespaceAntiAffinityGroupRequest) returns (SetNamespaceAntiAffinityGroupResponse);
  rpc RemoveNamespaceAntiAffinityGroup(RemoveNamespaceAntiAffinityGroupRequest) returns (RemoveNamespaceAntiAffinityGroupResponse);
  rpc GetAntiAffinityNamespaces(GetAntiAffinityNamespacesRequest) returns (GetAntiAffinityNamespacesResponse);

  rpc GetAutoSubscriptionCreation(GetAutoSubscriptionCreationRequest) returns (GetAutoSubscriptionCreationResponse);
  rpc SetAutoSubscriptionCreation(SetAutoSubscriptionCreationRequest) returns (SetAutoSubscriptionCreationResponse);
  rpc RemoveAutoSubscriptionCreation(RemoveAutoSubscriptionCreationRequest) returns (RemoveAutoSubscriptionCreationResponse);

  rpc GetAutoTopicCreation(GetAutoTopicCreationRequest) returns (GetAutoTopicCreationResponse);
  rpc SetAutoTopicCreation(SetAutoTopicCreationRequest) returns (SetAutoTopicCreationResponse);
  rpc RemoveAutoTopicCreation(RemoveAutoTopicCreationRequest) returns (RemoveAutoTopicCreationResponse);

  rpc GetBacklogQuotas(GetBacklogQuotasRequest) returns (GetBacklogQuotasResponse);
  rpc SetBacklogQuotas(SetBacklogQuotasRequest) returns (SetBacklogQuotasResponse);
  rpc RemoveBacklogQuota(RemoveBacklogQuotaRequest) returns (RemoveBacklogQuotaResponse);

  rpc GetBookieAffinityGroup(GetBookieAffinityGroupRequest) returns (GetBookieAffinityGroupResponse);
  rpc SetBookieAffinityGroup(SetBookieAffinityGroupRequest) returns (SetBookieAffinityGroupResponse);
  rpc RemoveBookieAffinityGroup(RemoveBookieAffinityGroupRequest) returns (RemoveBookieAffinityGroupResponse);

  rpc GetCompactionThreshold(GetCompactionThresholdRequest) returns (GetCompactionThresholdResponse);
  rpc SetCompactionThreshold(SetCompactionThresholdRequest) returns (SetCompactionThresholdResponse);
  rpc RemoveCompactionThreshold(RemoveCompactionThresholdRequest) returns (RemoveCompactionThresholdResponse);

  rpc GetDeduplicationSnapshotInterval(GetDeduplicationSnapshotIntervalRequest) returns (GetDeduplicationSnapshotIntervalResponse);
  rpc SetDeduplicationSnapshotInterval(SetDeduplicationSnapshotIntervalRequest) returns (SetDeduplicationSnapshotIntervalResponse);
  rpc RemoveDeduplicationSnapshotInterval(RemoveDeduplicationSnapshotIntervalRequest) returns (RemoveDeduplicationSnapshotIntervalResponse);

  rpc GetDeduplication(GetDeduplicationRequest) returns (GetDeduplicationResponse);
  rpc SetDeduplication(SetDeduplicationRequest) returns (SetDeduplicationResponse);
  rpc RemoveDeduplication(RemoveDeduplicationRequest) returns (RemoveDeduplicationResponse);

  rpc GetDelayedDelivery(GetDelayedDeliveryRequest) returns (GetDelayedDeliveryResponse);
  rpc SetDelayedDelivery(SetDelayedDeliveryRequest) returns (SetDelayedDeliveryResponse);
  rpc RemoveDelayedDelivery(RemoveDelayedDeliveryRequest) returns (RemoveDelayedDeliveryResponse);

  rpc GetDispatchRate(GetDispatchRateRequest) returns (GetDispatchRateResponse);
  rpc SetDispatchRate(SetDispatchRateRequest) returns (SetDispatchRateResponse);
  rpc RemoveDispatchRate(RemoveDispatchRateRequest) returns (RemoveDispatchRateResponse);

  rpc GetEncryptionRequired(GetEncryptionRequiredRequest) returns (GetEncryptionRequiredResponse);
  rpc SetEncryptionRequired(SetEncryptionRequiredRequest) returns (SetEncryptionRequiredResponse);
}
